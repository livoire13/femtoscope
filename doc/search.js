window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "femtoscope", "modulename": "femtoscope", "kind": "module", "doc": "<p><img src=\"images/logo.png\" alt=\"\" /></p>\n\n<p>The <em>femtoscope</em> software was written as part of Hugo L\u00e9vy's PhD thesis (2021-2024), under the supervision of Jo\u00ebl Berg\u00e9.\nThis Python code can be used to investigate different models of modified gravity within complex geometries on unbounded domains.\n<em>femtoscope</em> depends on many open source softwares (see dependencies), and comes as an alternative to commercial softwares.</p>\n\n<h2 id=\"installation-from-yaml\">Installation from YAML</h2>\n\n<p>YAML (stands for YAML Ain't Markup Language) is a serialization\nlanguage which is often used asa format for configuration files.\nAnaconda allows the creation of an environment file (with .yml\nextension) in order to share with others.</p>\n\n<blockquote>\n  <blockquote>\n    <p>conda env export --name femtoscope &gt; femtoscope.yml</p>\n  </blockquote>\n</blockquote>\n\n<p>This will create femtoscope.yml at current location. This file can then be used by another Anaconda user to re-create the same environment. The steps to follow (from official conda online documentation) are:\n1) Create the environment &gt;&gt; conda env create -f femtoscope.yml\n2) Activate the new environment &gt;&gt; conda activate femtoscope\n3) Verify that the new environment was installed correctly</p>\n\n<blockquote>\n  <blockquote>\n    <p>conda env list\n       and make sure femtoscope appears in the list.\n    This process is likely to take several tens of minutes (depends on the user's Internet connection speed).</p>\n  </blockquote>\n</blockquote>\n\n<p><strong>note</strong>\nThe project uses Python 3.9.16</p>\n\n<h2 id=\"main-dependencies\">Main dependencies</h2>\n\n<ul>\n<li>Python 3.9.16</li>\n<li>meshio 4.4.6</li>\n<li>numpy 1.25.0</li>\n<li>pandas 1.5.3</li>\n<li>pyevtk 1.5.0</li>\n<li>pyvista 0.38.3</li>\n<li>scipy 1.10.1</li>\n<li>sfepy 2023.2</li>\n<li>pdoc 10.0.1</li>\n<li>gmsh  4.11.1</li>\n</ul>\n\n<h2 id=\"setup-pythonpath-more\">setup (PYTHONPATH &amp; more)</h2>\n\n<p>The source directory of <em>femtoscope</em> is deliberately not placed in Anaconda3\\Lib\\site-packages as it is still under development. In order to be able to load the module from any location, one needs to add the <em>femtoscope</em> directory to the PYTHONPATH variable.</p>\n\n<p>Useful tips:</p>\n\n<ul>\n<li><p>Display PYTHONPATH</p>\n\n<blockquote>\n  <blockquote>\n    <p>import sys\n    print(sys.path)</p>\n  </blockquote>\n</blockquote></li>\n<li><p>Modify PYTHONPATH\nwith spyder --> Tools -> PYTHONPATH manager -> + Add path\nThe selected path must point to the <em>femtoscope</em> parent folder.\nin windows system environment variable --> modify PYTHONPATH</p></li>\n</ul>\n\n<h2 id=\"tree-structure\">Tree structure</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>\u251c\u2500\u2500\u2500data<span class=\"w\">  </span><span class=\"c1\"># I/O files</span>\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500\u2500mesh\n\u2502<span class=\"w\">   </span>\u2502<span class=\"w\">   </span>\u2514\u2500\u2500\u2500geo\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500\u2500model\n\u2502<span class=\"w\">   </span>\u2514\u2500\u2500\u2500result\n\u2502<span class=\"w\">       </span>\u2514\u2500\u2500\u2500plot\n\u251c\u2500\u2500\u2500femtoscope\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500\u2500core<span class=\"w\">  </span><span class=\"c1\"># weak form representation &amp; solver</span>\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500\u2500display\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500\u2500inout<span class=\"w\">  </span><span class=\"c1\"># mesh and .vtk generation</span>\n\u2502<span class=\"w\">   </span>\u251c\u2500\u2500\u2500misc\n\u2502<span class=\"w\">   </span>\u2514\u2500\u2500\u2500physics<span class=\"w\">  </span><span class=\"c1\"># Poisson &amp; KG equations</span>\n\u251c\u2500\u2500\u2500images<span class=\"w\">  </span><span class=\"c1\"># femtoscope logo</span>\n\u2514\u2500\u2500\u2500script<span class=\"w\">  </span><span class=\"c1\"># examples</span>\n</code></pre>\n</div>\n\n<h2 id=\"citing\">Citing</h2>\n\n<p>If you would like to cite <em>femtoscope</em> in a paper or presentation, please use the following reference:</p>\n\n<pre><code>@article{hlevy:femtoscope,\n    doi = {10.1103/PhysRevD.106.124021},\n    url = {https://link.aps.org/doi/10.1103/PhysRevD.106.124021},\n    author = {L\u00e9vy, Hugo and Berg\u00e9, Jo\u00ebl and Uzan, Jean-Philippe},\n    title = {Solving nonlinear Klein-Gordon equations on unbounded domains via\n    the Finite Element Method},\n    month = {09},\n    year = {2022}\n}\n</code></pre>\n\n<h2 id=\"generate-documentation\">Generate documentation</h2>\n\n<p>The documentation is generated using pdoc by running the Python script \"generate_documentation.py\" located in the \"script\" directory.</p>\n"}, {"fullname": "femtoscope.DATA_DIR", "modulename": "femtoscope", "qualname": "DATA_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "WindowsPath(&#x27;D:/hlevy/Documents/microscope2/femtoscope/data&#x27;)"}, {"fullname": "femtoscope.SCRIPT_DIR", "modulename": "femtoscope", "qualname": "SCRIPT_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "WindowsPath(&#x27;D:/hlevy/Documents/microscope2/femtoscope/script&#x27;)"}, {"fullname": "femtoscope.RESULT_DIR", "modulename": "femtoscope", "qualname": "RESULT_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "WindowsPath(&#x27;D:/hlevy/Documents/microscope2/femtoscope/data/result&#x27;)"}, {"fullname": "femtoscope.MESH_DIR", "modulename": "femtoscope", "qualname": "MESH_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "WindowsPath(&#x27;D:/hlevy/Documents/microscope2/femtoscope/data/mesh&#x27;)"}, {"fullname": "femtoscope.IMAGES_DIR", "modulename": "femtoscope", "qualname": "IMAGES_DIR", "kind": "variable", "doc": "<p></p>\n", "default_value": "WindowsPath(&#x27;D:/hlevy/Documents/microscope2/femtoscope/images&#x27;)"}, {"fullname": "femtoscope.core", "modulename": "femtoscope.core", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu", "modulename": "femtoscope.core.simu", "kind": "module", "doc": "<p>Created on Fri Jan 28 15:32:37 2022</p>\n\n<p>Simulation engine (bounded or unbounded domains, linear or nonlinear PDEs...).\nReminder for getting matrix / rhs vector:\n<a href=\"https://github.com/sfepy/sfepy/issues/565\">https://github.com/sfepy/sfepy/issues/565</a></p>\n\n<h2 id=\"052022-update-note\">05/2022 update note</h2>\n\n<p>In the past, femtoscope used to re-assemble all matrices and vectors at each\niteration of the Newton method (and even at each ping-pong iteration!), which\nis computationally inefficient. This problem can be circumvented by re-\nassembling only the iteration-dependent terms. An important portion of the\nprogram was edited in order to make this performance enhancement.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.core.simu.Solver", "modulename": "femtoscope.core.simu", "qualname": "Solver", "kind": "class", "doc": "<p>Class for performing FEM simulations.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>eps_dic</strong> (dict):\nDictionary with keys 'eps_a' and 'eps_r' corresponding to the absolute\nand relative tolerance settings respectively.\nThe default is {'eps_a' : 1e-10, 'eps_r' : 1.0}</li>\n<li><strong>ls</strong> (<code>sfepy.solvers.ls.ScipyDirect</code> by default.):\nLinear solver to be used. The default is ScipyDirect.</li>\n<li><strong>nls</strong> (<code>sfepy.solvers.nls.Newton</code>):\nNonlinear solver to be used. The default is Newton.</li>\n<li><strong>wfs_dic</strong> (dict):\nDictionary of all weakforms used in the simulation. Item with key\n'weakforms' represents the weakforms associated with the PDE to be\nsolved (1 wf for bounded domains, 2 wfs for unbounded ones). Other\nweakforms are for supplementary purposes (evaluation of the strong\nresidual, line-search...).</li>\n<li><strong>nwf</strong> (int):\nNumber of weak forms provided to the solver.</li>\n<li><strong>islinear</strong> (bool):\nWhether or not the PDE to be solved is linear.</li>\n<li><strong>is_bounded</strong> (bool):\nWhether or not the domain is bounded.</li>\n<li><strong>iter</strong> (int, optional):\nMaximum number of newton/picard iterations (defined if islinear is\nFalse).</li>\n<li><strong>initial_guess</strong> (list, optional):\nList of initial guesses (one per weak form) used to initialize\nnonlinear solver (defined if islinear is False).The default is a scalar\nfield set to zero everywhere.</li>\n<li><strong>relax</strong> (float, optional):\nRelaxation parameter for newton/picard method (defined if islinear is\nFalse). The default is 0.9.</li>\n<li><strong>criteria</strong> (<code>Criteria</code> instance, optional):\nCriteria instance gathering the directives for when to stop nonlinear\niterations (defined if islinear is False). The default is to iterate\n20 times.</li>\n<li><strong>has_converged</strong> (bool):\nFalse until the Criteria instance decrees convergence has been reached\n(defined if islinear is False).</li>\n<li><strong>sols</strong> (list):\nList of the solution(s) (one per weak form).</li>\n<li><strong>cogammas</strong> (list):\nList of two <code>sfepy.discrete.common.region.Region</code> instances\ncorresponding to the interior and exterior domain common frontier\n(defined if nwf = 2).</li>\n<li><strong>conn</strong> (str):\nMethod for linking the interior domain with the exterior domain\n['connected' , 'ping-pong']. The default is 'connected'.</li>\n<li><strong>max_iter_pp</strong> (int):\nMaximum number of iterations for the ping-pong method (defined if\nconn = 'ping-pong'). The default is 7.</li>\n<li><strong>relax_pp</strong> (float):\nRelaxation parameter for ping-pong iterations (between 0 and 1).\nThe default is 0.7.</li>\n<li><strong>bounds</strong> (list):\nList of the min &amp; max field values (can be crucial to prevent\ndivergence in the solution for nonlinear problems).</li>\n<li><strong>oldsols</strong> (list):\nList of the solution(s) at the previous iteration (one per weak form).</li>\n<li><strong>buffersols</strong> (list):\nTemporary storage of the solution(s).</li>\n<li><strong>outfiles</strong> (list):\nList of the exported .vtk files containing simulation results.</li>\n<li><strong>save_all_newton</strong> (bool):\nSave all Newton's iterations (for nonlinear problems only).\nThe default is False.</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n"}, {"fullname": "femtoscope.core.simu.Solver.__init__", "modulename": "femtoscope.core.simu", "qualname": "Solver.__init__", "kind": "function", "doc": "<p>Construct a Solver instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>weakforms</strong> (list):\nList of one or two WeakForm instances.</li>\n<li><strong>islinear</strong> (bool, optional):\nWhether or not the PDE to be solved is linear. The default is True.</li>\n<li><strong>kwargs</strong>: <em>Cf class documentation</em></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">wfs_dic</span>, </span><span class=\"param\"><span class=\"n\">islinear</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.core.simu.Solver.forbidden_nl_arg", "modulename": "femtoscope.core.simu", "qualname": "Solver.forbidden_nl_arg", "kind": "variable", "doc": "<p>Class variable <code>forbidden_nl_arg</code> is a list of material extra-arguments\n(strings) which are not to be interpreted as non-linear terms.\nConsequently, material's data will not be updated when calling the function\n<code>update_material</code> unless the material's function has at least one extra-\nargument not contained in that list.</p>\n", "default_value": "[&#x27;update_nl&#x27;, &#x27;rho&#x27;, &#x27;rho_vac&#x27;, &#x27;Rcut&#x27;, &#x27;solver&#x27;]"}, {"fullname": "femtoscope.core.simu.Solver.verbose", "modulename": "femtoscope.core.simu", "qualname": "Solver.verbose", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.print_kappa", "modulename": "femtoscope.core.simu", "qualname": "Solver.print_kappa", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.eps_dic", "modulename": "femtoscope.core.simu", "qualname": "Solver.eps_dic", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.ls", "modulename": "femtoscope.core.simu", "qualname": "Solver.ls", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.nls", "modulename": "femtoscope.core.simu", "qualname": "Solver.nls", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.wfs_dic", "modulename": "femtoscope.core.simu", "qualname": "Solver.wfs_dic", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.weakforms", "modulename": "femtoscope.core.simu", "qualname": "Solver.weakforms", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.nwf", "modulename": "femtoscope.core.simu", "qualname": "Solver.nwf", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.is_bounded", "modulename": "femtoscope.core.simu", "qualname": "Solver.is_bounded", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.oldsols", "modulename": "femtoscope.core.simu", "qualname": "Solver.oldsols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.buffersols", "modulename": "femtoscope.core.simu", "qualname": "Solver.buffersols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.sols", "modulename": "femtoscope.core.simu", "qualname": "Solver.sols", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.bounds", "modulename": "femtoscope.core.simu", "qualname": "Solver.bounds", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.islinear", "modulename": "femtoscope.core.simu", "qualname": "Solver.islinear", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.initialized", "modulename": "femtoscope.core.simu", "qualname": "Solver.initialized", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.outfiles", "modulename": "femtoscope.core.simu", "qualname": "Solver.outfiles", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.Solver.init_mtxvec_dic", "modulename": "femtoscope.core.simu", "qualname": "Solver.init_mtxvec_dic", "kind": "function", "doc": "<p>Initialize the dictionary of all matrices &amp; vectors. The keys\ndepend on the nature of the simulation (linear or nonlinear, connection\ntechnique, etc.)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.Solver.init_problems", "modulename": "femtoscope.core.simu", "qualname": "Solver.init_problems", "kind": "function", "doc": "<p>Initialize problem instances. The keys of the <code>pbs_dic</code> depend on\nthe nature of the simulation (linear or nonlinear, connection\ntechnique, etc.)</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.Solver.init_mtxvec", "modulename": "femtoscope.core.simu", "qualname": "Solver.init_mtxvec", "kind": "function", "doc": "<p>Assemble all matrices and vectors. These objects are then accessible\nthrough the <code>self.mtxvec_dic</code> dictionary.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.Solver.update_mtxvec", "modulename": "femtoscope.core.simu", "qualname": "Solver.update_mtxvec", "kind": "function", "doc": "<p>Re-assemble matrices and vectors associated with terms featured in\n<code>eqn_mod</code> equations from all weak forms.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.Solver.solve", "modulename": "femtoscope.core.simu", "qualname": "Solver.solve", "kind": "function", "doc": "<p>Launch the FEM computation!</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.Solver.save", "modulename": "femtoscope.core.simu", "qualname": "Solver.save", "kind": "function", "doc": "<p>Save the results to vtk. This routine is a wrapper for\n<code>femtoscope.inout.vtkfactory.createStructuredVTK</code>, which itself rely\non meshio.\nWarning: the connectivity is reconstructed from scratch</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>grad</strong> (bool, optional):\nSave the gradient of the scalar field. The default is False.</li>\n<li><strong>name</strong> (str, optional):\nName of the output file (prefix).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>out</strong> (list):\nResult file names.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.Solver.plot_residual", "modulename": "femtoscope.core.simu", "qualname": "Solver.plot_residual", "kind": "function", "doc": "<p>Plot the residual vector.\nSince 22/05/23, it is no longer necessary to remove ebc-DOFs from the\ncoordinate array. The residual vector is not cropped anymore but\ncontains NaN values instead.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>log</strong> (bool, optional):\nIf True, plot the log of the absolute value of the residual vector.\nThe default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ax</strong> (Axes):\nFigure axe.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">log</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.Solver.display", "modulename": "femtoscope.core.simu", "qualname": "Solver.display", "kind": "function", "doc": "<p>Display FEM results. The <code>solve</code> method must have been called on the\nSolver instance beforehand.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>grad</strong> (bool, optional):\nSave the gradient of the scalar field. The default is False.</li>\n<li><strong>kwargs :</strong>: Potential extra arguments (to be added in the future).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.StopCriteria", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria", "kind": "class", "doc": "<p>Class defining stopping conditions for nonlinear problems.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>min_iter</strong> (int):\nMinimum number of Newton iterations. The default is 8.</li>\n<li><strong>max_iter</strong> (int):\nMaximum number of Newton iterations.</li>\n<li><strong>sol_delta_tol</strong> (float):\nThreshold on the minimum relative distance (in 2-norm) between two\nsuccessive iterations.</li>\n<li><strong>active_dic</strong> (dict):\nDictionary for knowing which criteria are active and which are not.</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n<li><strong>stop</strong> (bool):\nFalse until some stopping criterion is met.</li>\n<li><strong>res_vec</strong> (ndarray):\nCurrent strong residual vector.</li>\n<li><strong>res_vec_parts</strong> (dic):\nDictionary with keys ('mtx', 'rhs_cst', 'rhs_mod') and values each term\nof the strong residual vector.</li>\n<li><strong>res</strong> (float):\nCurrent value of the strong residual (L2-norm).</li>\n<li><strong>sol_delta</strong> (float):\nCurrent value of the relative distance between two successive\niterations.</li>\n<li><strong>history</strong> (list of dicts):\nList of dictionaries containing all the above parameters for monitoring\nconvergence.</li>\n<li><strong>last_relax_update</strong> (List of int):\nLast iteration number for which the relaxation parameter of the Newton\nmethod was decreased.</li>\n</ul>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.__init__", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_iter</span>, </span><span class=\"param\"><span class=\"n\">min_iter</span><span class=\"o\">=</span><span class=\"mi\">8</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.core.simu.StopCriteria.max_iter", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.max_iter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.min_iter", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.min_iter", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.res_delta_tol", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.res_delta_tol", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.sol_delta_tol", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.sol_delta_tol", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.stop", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.stop", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.res_vec", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.res_vec", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.res_vec_parts", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.res_vec_parts", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.res", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.res", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.sol_delta", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.sol_delta", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.history", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.history", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.last_relax_update", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.last_relax_update", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.active_dic", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.active_dic", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.verbose", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.verbose", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.simu.StopCriteria.evaluate", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.evaluate", "kind": "function", "doc": "<p>Evaluate all the criteria set active. Some additional indicators are\ncomputed but are intended for information purposes only.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe solver instance.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>bool</strong>: True if one of the stopping criterion has been met, False otherwise.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">solver</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.StopCriteria.fill_history", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.fill_history", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">niter</span>, </span><span class=\"param\"><span class=\"n\">sol_delta</span>, </span><span class=\"param\"><span class=\"n\">res_delta</span>, </span><span class=\"param\"><span class=\"n\">res_L2</span>, </span><span class=\"param\"><span class=\"n\">res_mean</span>, </span><span class=\"param\"><span class=\"n\">res_inf</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.StopCriteria.adjust_relax", "modulename": "femtoscope.core.simu", "qualname": "StopCriteria.adjust_relax", "kind": "function", "doc": "<p>Based on the analyis of the current convergence-history of the on-going\nnonlinear equation solving, the relaxation parameter manually decreased\nto achieve convergence of Newton's iterations. The two following\nconditions must be satisfied simultaneously:\n    - the relative delta has stopped decreasing\n    - the residual in 2-norm has stopped decreasing</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe solver instance.</li>\n<li><strong>history_size</strong> (int, optional):\nNumber of past iteration used to check the two stalling conditions.\nThe default is 3.</li>\n<li><strong>factor</strong> (float, optional):\nFactor by which the relaxation parameter is multiplied (should be\nstrictly smaller than 1). The default value is 0.8.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">solver</span>, </span><span class=\"param\"><span class=\"n\">history_size</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"n\">factor</span><span class=\"o\">=</span><span class=\"mf\">0.8</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.lsolve", "modulename": "femtoscope.core.simu", "qualname": "lsolve", "kind": "function", "doc": "<p>Linear solve function.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe solver instance.</li>\n<li><strong>buffer</strong> (bool, optional):\nIf True, the computed solution is kept in <em>solver.buffersols</em>. This is\nonly relevant to nonlinear problems. The way the buffer is unload into\n<em>solver.sols</em> depends on the nonlinear method implementation.\nThe default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">solver</span>, </span><span class=\"param\"><span class=\"n\">buffer</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.nlsolve", "modulename": "femtoscope.core.simu", "qualname": "nlsolve", "kind": "function", "doc": "<p>Nonlinear solve function based on Newton iterations. Each iteration is\nassociated with a linear problem that is solved by calling the <code>solve()</code>\nfunction.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe solver instance.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>save_all_newton</strong> (bool, optional):\nIf true, save all Newton's iterations (solution, residual...).\nThe default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">solver</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.hook_writer", "modulename": "femtoscope.core.simu", "qualname": "hook_writer", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coors</span>, </span><span class=\"param\"><span class=\"n\">sol</span>, </span><span class=\"param\"><span class=\"n\">res</span>, </span><span class=\"param\"><span class=\"n\">no_iter</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.line_search", "modulename": "femtoscope.core.simu", "qualname": "line_search", "kind": "function", "doc": "<p>WARNING -- EXPERIMENTAL!!\nFind the real number w such that $u_{k+1} = w u^* + (1-w) u_{k}$ minimizes\nthe L\u00b2 norm of the strong residual.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe solver instance.</li>\n<li><strong>delta</strong> (ndarray):\nLocal direction of descent $\\delta u = u^* - u_k$.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>float</strong>: The real number w resulting from the line-search algorithm.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">solver</span>, </span><span class=\"param\"><span class=\"n\">delta</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.set_mat_extra_arg", "modulename": "femtoscope.core.simu", "qualname": "set_mat_extra_arg", "kind": "function", "doc": "<p>Utilitary function for setting material extra arg.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>wf</strong> (<code>WeakForm</code> instance):\nWeak form containing the materials of interest.</li>\n<li><strong>arg</strong> (<em>any type</em>):\nValue of the argument to be set.</li>\n<li><strong>update</strong> (bool, optional):\nIf True, the material data will be re-computed. Typically, it has to be\nset to True when called after Sfepy's Problem instanciation.\nThe default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">wf</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"n\">keys</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.evaluate_at_qps", "modulename": "femtoscope.core.simu", "qualname": "evaluate_at_qps", "kind": "function", "doc": "<p>Compute an extrapolation of the solution at the domain's quadrature points.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>wf</strong> (<code>WeakForm</code> instance):\nWeak form associated with the solution field <code>sol</code>.</li>\n<li><strong>sol</strong> (ndarray):\n1D array containing the solution at DOFs.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>sol_qps</strong> (ndarray):\n1D array containing the values of the solution field at quadrature\npoints.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">wf</span>, </span><span class=\"param\"><span class=\"n\">sol</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.update_neumann", "modulename": "femtoscope.core.simu", "qualname": "update_neumann", "kind": "function", "doc": "<p>Utility function for updating the Neumann boundary condition term on the\nexterior domain. Note that the neumann material function should take the\nsolver instance as one of its extra-arguments in order to be able to\nactually compute the flux of the solution across the interior domain\nboundary. This function is only called when dealing with unbounded problems\nwith <code>conn</code> set to 'ping-pong'.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>wf</strong> (<code>WeakForm</code> instance):\nWeak form whose Neumann boundary condition term is updated.</li>\n<li><strong>gamma</strong> (<code>Region</code> instance):\nSub region of dimension D-1 on which the Neumann term is defined.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">wf</span>, </span><span class=\"param\"><span class=\"n\">gamma</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.update_material", "modulename": "femtoscope.core.simu", "qualname": "update_material", "kind": "function", "doc": "<p>Utility function for updating a material's data at the region quadrature\npoints.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mat</strong> (<code>Material</code> instance):\nThe material to be updated.</li>\n<li><strong>region</strong> (<code>Region</code> instance):\nRegion over which the material is defined.</li>\n<li><strong>integral</strong> (<code>Integral</code> instance):\nSfepy's Integral class instance (wrapper class around quadratures).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mat</span>, </span><span class=\"param\"><span class=\"n\">region</span>, </span><span class=\"param\"><span class=\"n\">integral</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.update_material_all", "modulename": "femtoscope.core.simu", "qualname": "update_material_all", "kind": "function", "doc": "<p>Utility function for updating all materials' data of a given weak form.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>wf</strong> (<code>WeakForm</code> instance):\nWeak form whose materials' data are updated.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">wf</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.reset_dirichlet", "modulename": "femtoscope.core.simu", "qualname": "reset_dirichlet", "kind": "function", "doc": "<p>Utility function for setting new Dirichlet boundary condition on the outer\nboundary of the interior domain. This function is only called when dealing\nwith unbounded problems with <code>conn</code> set to 'ping-pong'.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data</strong> (ndarray):\n1D numpy array containing the solution field at the exterior domain\nDOFs.</li>\n<li><strong>wf1</strong> (<code>WeakForm</code> instance):\nWeak form associated with the interior domain.</li>\n<li><strong>wf2</strong> (<code>WeakForm</code> instance):\nWeak form associated with the exterior domain.</li>\n<li><strong>cogammas</strong> (list):\nList of two <code>sfepy.discrete.common.region.Region</code> instances\ncorresponding to the interior and exterior domain common frontier.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">wf1</span>, </span><span class=\"param\"><span class=\"n\">wf2</span>, </span><span class=\"param\"><span class=\"n\">cogammas</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.strong_residual", "modulename": "femtoscope.core.simu", "qualname": "strong_residual", "kind": "function", "doc": "<p>Compute the strong residual (for nonlinear problems only). Note that the\nstrong residual might be evaluated on both the interior and exterior\nif two nonlinear WeakForms instances are provided at the creation of\n<code>solver</code> (unbounded problems only).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe solver instance.</li>\n<li><strong>sol_w</strong> (array):\nCurrent solution (vector).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>res_vec</strong> (ndarray):\nResidual vector.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">solver</span>, </span><span class=\"param\"><span class=\"n\">sol_w</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.vec_G", "modulename": "femtoscope.core.simu", "qualname": "vec_G", "kind": "function", "doc": "<p>Utility function for the line-search algorithm</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">solver</span>, </span><span class=\"param\"><span class=\"n\">sol_w</span>, </span><span class=\"param\"><span class=\"n\">delta</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.delete_ebc_dofs", "modulename": "femtoscope.core.simu", "qualname": "delete_ebc_dofs", "kind": "function", "doc": "<p>Remove vector elements that correspond to DOFs subject to essential\nboundary conditions or DOFs that are part of a certain facet region\nspecified by the keyword argument <code>gamma</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vec</strong> (ndarray):\n1D numpy array defined over DOFs.</li>\n<li><strong>wf</strong> (<code>WeakForm</code> instance):\nWeak form instance containing the DOFs info as well as the facet(s)\nsubject to essential boundary conditions.</li>\n<li><strong>gamma</strong> (<code>Region</code> instance, optional):\nExtra boundary where <code>vec</code> elements should be deleted (a priori not\nconcerned by ebc). The default is None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>idx</strong> (ndarray):\nIndices of the DOFs deleted.</li>\n<li><strong>ndarray</strong>: The amputed version of <code>vec</code>.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vec</span>, </span><span class=\"param\"><span class=\"n\">wf</span>, </span><span class=\"param\"><span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.get_ebc_dofs", "modulename": "femtoscope.core.simu", "qualname": "get_ebc_dofs", "kind": "function", "doc": "<p>Same as <code>delete_ebc_dofs</code> but only returns the indices of the DOFs\nassociated with Dirichlet boundary conditions or belong to facet gamma.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">wf</span>, </span><span class=\"param\"><span class=\"n\">gamma</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.assemble_mtxvec", "modulename": "femtoscope.core.simu", "qualname": "assemble_mtxvec", "kind": "function", "doc": "<p>Assemble the terms (matrices and vectors) of <code>Problem</code> instances (Cf sfepy\nAPI) provided by the user. The assembled matrices and vectors are then\naccessible through the solver's <code>mtxvec_dic</code> dictionary.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe solver instance.</li>\n<li><strong>*pbs</strong> (list or tupple):\nList of <code>Problem</code> instances.</li>\n<li><strong>assemble_mtx</strong> (bool, optional):\nWhether matrices are assembled or not. The default is True.</li>\n<li><strong>assemble_rhs</strong> (bool, optional):\nWhether vectors are assembled or not. The default is True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">solver</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">pbs</span>, </span><span class=\"param\"><span class=\"n\">assemble_mtx</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">assemble_rhs</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.update_global_mtxvec", "modulename": "femtoscope.core.simu", "qualname": "update_global_mtxvec", "kind": "function", "doc": "<p>Update the global stiffness matrix &amp; rhs vector (those subsequently\npassed to the linear solver) which are only sums of pre-computed matrices\n&amp; vectors.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">solver</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.simu.reconstruct_full_sol", "modulename": "femtoscope.core.simu", "qualname": "reconstruct_full_sol", "kind": "function", "doc": "<p>Reconstruct the full solution vector from the reduced solution vector\n(defined only at active DOFs i.e. DOFs that are not constrained by\nessential boundary conditions).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>pb</strong> (<code>Problem</code> instance):\nProblem instance associated with the solution to reconstruct.</li>\n<li><strong>sol_reduced</strong> (ndarray):\nReduced solution vector.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>sol_full</strong> (ndarray):\nSolution vector defined on all DOFs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">pb</span>, </span><span class=\"param\"><span class=\"n\">sol_reduced</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.weak", "modulename": "femtoscope.core.weak", "kind": "module", "doc": "<p>Created on Wed Jan 26 12:36:29 2022</p>\n\n<p>Tools for creating and manipulating weak form PDEs created out of Sfepy\nobjects.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm", "modulename": "femtoscope.core.weak", "qualname": "WeakForm", "kind": "class", "doc": "<p>Class encapsulating all Sfepy objects for defining a weak form PDE.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the weak form.</li>\n<li><strong>meshfile</strong> (str):\nName of the meshfile e.g. 'my_mesh.vtk' located in the specified mesh\ndirectory.</li>\n<li><strong>terms</strong> (list):\nList containing the terms of the weak form PDE. Each element of the\nlist is a list containing:\n    - a material function or None.\n    - a Sfepy string of the term, e.g. 'dw_laplace', or\n    'dw_volume'. <a href=\"https://sfepy.org/doc-devel/terms_overview.html\">https://sfepy.org/doc-devel/terms_overview.html</a>.\n    - a region's name e.g. 'facet200', 'subomega301', or None.</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n<li><strong>mesh_dir</strong> (str):\nAbsolute path to the directory containing meshfile. The default is\nNone.</li>\n<li><strong>ext</strong> (str):\nExtension given to the mesh file. The default is '.vtk'.</li>\n<li><strong>constcoeffs</strong> (list):\nCoefficients weighting the terms such that the weak form equation\nreads\n    $$ \\sum_{i=1}^{N_{\\mathrm{terms}}} \\texttt{constcoeffs[i]} \\times\n    \\texttt{terms[i]} = 0 $$</li>\n<li><strong>unknown</strong> (<code>sfepy.discrete.variables.FieldVariable</code>):\nSfepy unknown variable.</li>\n<li><strong>unknown_name</strong> (str):\nName of the unknown variable. The default is 'u'.</li>\n<li><strong>test</strong> (<code>sfepy.discrete.variables.FieldVariable</code>):\nSfepy test variable.</li>\n<li><strong>test_name</strong> (str):\nName of the test variable. The default is 'v'.</li>\n<li><strong>order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>space</strong> (str):\nThe function space name. The default is 'H1'.</li>\n<li><strong>poly_space_base</strong> (str):\nThe name of polynomial space base. The default is 'lagrange'.</li>\n<li><strong>integral</strong> (<code>sfepy.discrete.integrals.Integral</code>):\nSfepy Integral instance.</li>\n<li><strong>integral_name</strong> (str):\nThe integral name. The default is 'i'.</li>\n<li><strong>domain</strong> (<code>sfepy.discrete.fem.domain.FEDomain</code>):\nSfepy Domain instance.</li>\n<li><strong>domain_name</strong> (str):\nThe domain name. The default is 'domain'.</li>\n<li><strong>omega</strong> (Region):\nThe whole domain over which the variable are defined.</li>\n<li><strong>dimension</strong> (int):\nSpatial dimension of the problem (3 is the maximum).</li>\n<li><strong>physical_group_ids</strong> (list of int):\nAll distinct physical groups identifiers.</li>\n<li><strong>region_dic</strong> (dict):\nDictionary of all regions.</li>\n<li><strong>subomegas</strong> (list):\nList of sub regions of dimension D.</li>\n<li><strong>facets</strong> (list):\nList of sub regions of dimension D-1.</li>\n<li><strong>edges</strong> (list):\nList of sub regions of dimension 1.</li>\n<li><strong>vertices</strong> (list):\nList of sub regions of dimension 0.</li>\n<li><strong>epbcs</strong> (list):\nList of periodic boundary conditions.</li>\n<li><strong>lcbcs</strong> (list):\nList of linear combination boundary conditions.</li>\n<li><strong>ebcs</strong> (list):\nList of essential boundary conditions.</li>\n<li><strong>ndofs</strong> (int):\nNumber of degrees of freedom.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n</ul>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.__init__", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.__init__", "kind": "function", "doc": "<p>Construct a WeakForm instance that is an object containing all the\nnecessary information related to a given weak form PDE.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the weak form.</li>\n<li><strong>meshfile</strong> (str):\nName of the meshfile e.g. 'my_mesh.vtk' located in the specified\nmesh directory.</li>\n<li><strong>terms</strong> (list):\nList containing the terms of the weak form PDE. Each element of the\nlist is a list containing:\n    - a material function or None.\n    - a Sfepy string of the term, e.g. 'dw_laplace', or\n    'dw_volume'. <a href=\"https://sfepy.org/doc-devel/terms_overview.html\">https://sfepy.org/doc-devel/terms_overview.html</a>.\n    - a region's name e.g. 'facet200', 'subomega301', or None.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None.</li>\n<li><strong>ext</strong> (str):\nExtension of the mesh file. The default is '.vtk'.</li>\n<li><strong>constcoeffs</strong> (list):\nCoefficients weighting the terms such that the weak form equation\nreads\n    $$ \\sum_{i=1}^{N_{\\mathrm{terms}}} \\texttt{constcoeffs[i]}\n    \\times \\texttt{terms[i]} = 0 $$</li>\n<li><strong>dirichlet_bc_facet</strong> (list):\nList of dirichlet boundary conditions applied to facets. This list\nmust be the same length as the number of facets defined in the\ndomain. Elements of the list are such that:\n    - if <code>dirichlet_bc_facet</code>[k] is None, then facets[k] is free of\n    any essential boundary condition.\n    - if <code>dirichlet_bc_facet</code>[k] is a number, then facets[k] is\n    constrained by a constant essential boundary condition.\n    - if <code>dirichlet_bc_facet</code>[k] is a function, then facets[k] is\n    constrained by a dirichlet boundary condition calculated by the\n    function.\nThe default is None.</li>\n<li><strong>dirichlet_bc_edge</strong> (list):\nList of dirichlet boundary conditions applied to edges. This list\nmust be the same length as the number of edges defined in the\ndomain. The default is None.</li>\n<li><strong>dirichlet_bc_vertex</strong> (list):\nList of dirichlet boundary conditions applied to vertices. This\nlist must be the same length as the number of edges defined in the\ndomain. The default is None.</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n<li><strong>domain_name</strong> (str):\nThe domain name. The default is 'domain'.</li>\n<li><strong>integral_name</strong> (str):\nThe integral name. The default is 'i'.</li>\n<li><strong>space</strong> (str):\nThe function space name. The default is 'H1'.</li>\n<li><strong>poly_space_base</strong> (str):\nThe name of polynomial space base. The default is 'lagrange'.</li>\n<li><strong>test_name</strong> (str):\nName of the test variable. The default is 'v'.</li>\n<li><strong>unknown_name</strong> (str):\nName of the unknown variable. The default is 'u'.</li>\n<li><strong>densities</strong> (list):\nList of density functions or constants. The length of this list\nmust match the number of sub*domains in the mesh.\nThe default is None.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">terms</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.core.weak.WeakForm.forbidden_mod_arg", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.forbidden_mod_arg", "kind": "variable", "doc": "<p></p>\n", "default_value": "[&#x27;update_nl&#x27;, &#x27;rho&#x27;, &#x27;rho_vac&#x27;, &#x27;Rcut&#x27;]"}, {"fullname": "femtoscope.core.weak.WeakForm.verbose", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.verbose", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.name", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.constcoeffs", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.constcoeffs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.unknown_name", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.unknown_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.test_name", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.test_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.order", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.order", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.space", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.space", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.poly_space_base", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.poly_space_base", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.integral_name", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.integral_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.domain_name", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.domain_name", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.nterms", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.nterms", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.domain", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.domain", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.omega", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.omega", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.dimension", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.dimension", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.entity_functions", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.entity_functions", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.region_dic", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.region_dic", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.subomegas", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.subomegas", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.facets", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.facets", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.edges", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.edges", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.vertices", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.vertices", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.field", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.field", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.ndofs", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.ndofs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.unknown", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.unknown", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.test", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.test", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.integral", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.integral", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.ebcs", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.ebcs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.epbcs", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.epbcs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.lcbcs", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.lcbcs", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.terms", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.terms", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.eqn", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.eqn", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.eqn_cst", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.eqn_cst", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.eqn_mod", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.eqn_mod", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.core.weak.WeakForm.add_term", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.add_term", "kind": "function", "doc": "<p>Add a term to the existing WeakForm object.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>materm</strong> (list of length 2 or 3 (one element of terms).):\nA list containing:\n    - a material function or None.\n    - a Sfepy string of the term, e.g. 'dw_laplace', or\n    'dw_volume'. <a href=\"https://sfepy.org/doc-devel/terms_overview.html\">https://sfepy.org/doc-devel/terms_overview.html</a>\n    - a region's name e.g. 'facet200', 'subomega301', or None.</li>\n<li><strong>update</strong> (bool, optional):\nUpdate self.equation with new term. The default is False.</li>\n<li><strong>newcoeff</strong> (float, optional):\nIf update, the new term multiplicative constant.\nThe default is 1.0.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">materm</span>, </span><span class=\"param\"><span class=\"n\">update</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">newcoeff</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.weak.WeakForm.make_equation", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.make_equation", "kind": "function", "doc": "<p>Set the eqn attribute of the WeakForm object.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">terms</span>, </span><span class=\"param\"><span class=\"n\">constcoeffs</span>, </span><span class=\"param\"><span class=\"n\">name</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.weak.WeakForm.split_equation", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.split_equation", "kind": "function", "doc": "<p>Split the equation into constant VS updatable equations.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.core.weak.WeakForm.get_term_table_kw", "modulename": "femtoscope.core.weak", "qualname": "WeakForm.get_term_table_kw", "kind": "function", "doc": "<p>Utility method for getting the syntax of a term given by its string\nidentifier.  Might break with future Sfepy releases, see\n<a href=\"https://github.com/sfepy/sfepy/issues/773\">https://github.com/sfepy/sfepy/issues/773</a></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">term_table</span>, </span><span class=\"param\"><span class=\"n\">term_str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display", "modulename": "femtoscope.display", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "femtoscope.display.fea_plot", "modulename": "femtoscope.display.fea_plot", "kind": "module", "doc": "<p>Created on Thu Feb 10 13:29:27 2022</p>\n\n<p>Utilities for displaying simulation results.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.display.fea_plot.plot_from_vtk", "modulename": "femtoscope.display.fea_plot", "qualname": "plot_from_vtk", "kind": "function", "doc": "<p>Wrapper for all functions that generate plots straight from .vtk file.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>vtkfile</strong> (str):\nName of the .vtk file containing FEA results.</li>\n<li><strong>result_dir</strong> (str, optional):\nPath to directory where the meshfile is located. If empty string,\nthe program looks for the mesh in global <code>RESULT_DIR</code> directory.\nThe default is ''.</li>\n<li><strong>plotfunc</strong> (str):\nPlot function to be used. The default is 'mayavi'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">vtkfile</span>, </span><span class=\"param\"><span class=\"n\">result_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">plotfunc</span><span class=\"o\">=</span><span class=\"s1\">&#39;pyvista&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.fea_plot.mayavi_plot", "modulename": "femtoscope.display.fea_plot", "qualname": "mayavi_plot", "kind": "function", "doc": "<p>Plot the data contained within a .vtk or .vtu data file using the\nmayavi.mlab module, which is a higher-level module than bare vtk module.\nMore information regarding the function's code can be found at\n<a href=\"https://stackoverflow.com/questions/56401123/reading-and-plotting-vtk-file-data-structure-with-python\">https://stackoverflow.com/questions/56401123/reading-and-plotting-vtk-file-data-structure-with-python</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fullFileName</strong> (str):\nAbsolute path of the .vtk file to be displayed.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fullFileName</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.fea_plot.pyvista_plot", "modulename": "femtoscope.display.fea_plot", "qualname": "pyvista_plot", "kind": "function", "doc": "<p>Plot the data contained within a .vtk or .vtu data file using the pyvista\nmodule, which is a higher-level module than bare vtk module. More\ninformation regarding the function's code can be found at\n<a href=\"https://stackoverflow.com/questions/56401123/reading-and-plotting-vtk-file-data-structure-with-python\">https://stackoverflow.com/questions/56401123/reading-and-plotting-vtk-file-data-structure-with-python</a></p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fullFileName</strong> (str):\nAbsolute path of the .vtk file to be displayed.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fullFileName</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.fea_plot.sfepy_postproc_plot", "modulename": "femtoscope.display.fea_plot", "qualname": "sfepy_postproc_plot", "kind": "function", "doc": "<p>Use sfepy built-in post-processing routines, in particular 'postproc.py'</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fullFileName</strong> (str):\nAbsolute path of the .vtk file to be displayed.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fullFileName</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.fea_plot.sfepy_resview_plot", "modulename": "femtoscope.display.fea_plot", "qualname": "sfepy_resview_plot", "kind": "function", "doc": "<p>Use sfepy built-in post-processing routines, in particular 'resview.py'.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fullFileName</strong> (str):\nAbsolute path of the .vtk file to be displayed.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fullFileName</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.fea_plot.plot_from_data", "modulename": "femtoscope.display.fea_plot", "qualname": "plot_from_data", "kind": "function", "doc": "<p>Plots 2d FEM results from raw data, using matplotlib built-in routines.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>X</strong> (1d numpy array):\nX-coordinates of the nodes constituting the mesh.</li>\n<li><strong>Y</strong> (1d numpy array):\nY-coordinates of the nodes constituting the mesh.</li>\n<li><strong>scalar_field</strong> (1d numpy array):\nFEM-computed solution of PDE at nodes.</li>\n<li><strong>name</strong> (String):\nBecomes the title of the figure if keyword argument 'title' is not\nfilled out.</li>\n<li><strong>triang</strong> (numpy array of integers):\nConnectivity table for triangles (nodes belonging to each triangle).\nThe default is None.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>title</strong> (String):\nTitle to be given to the figure.\nThe default is the positional argument [name]</li>\n<li><strong>xlabel</strong> (String):\nName of the x-axis. The default is ''</li>\n<li><strong>ylabel</strong> (String):\nName of the y-axis. The default is ''</li>\n<li><strong>unit</strong> (String):\nUnit of the scalar field being displayed. The default is ''</li>\n<li><strong>colormap</strong> (String):\nSee <a href=\"https://matplotlib.org/stable/tutorials/colors/colormaps.html\">https://matplotlib.org/stable/tutorials/colors/colormaps.html</a> for\ncolormap examples. The default is 'viridis'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">X</span>, </span><span class=\"param\"><span class=\"n\">Y</span>, </span><span class=\"param\"><span class=\"n\">scalar_field</span>, </span><span class=\"param\"><span class=\"n\">name</span>, </span><span class=\"param\"><span class=\"n\">triang</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.mesh_plot", "modulename": "femtoscope.display.mesh_plot", "kind": "module", "doc": "<p>Created on Thu Feb 10 13:51:10 2022</p>\n\n<p>Utilities for displaying Meshes &amp; IGA domains.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.display.mesh_plot.plot_iga", "modulename": "femtoscope.display.mesh_plot", "qualname": "plot_iga", "kind": "function", "doc": "<p>Display IGA domain (extension '.iga') created with igakit.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>igafile</strong> (str):\nName of the .iga file.</li>\n<li><strong>mesh_dir</strong> (String, optional):\nPath to directory where the meshfile is located. If empty string,\nthe program looks for the mesh in global MESH_DIR directory.\nThe default is ''.</li>\n<li><strong>selector</strong> (str, optional):\nPlot function selector {'mayavi' , 'matplotlib'}.\nThe default is 'matplotlib'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">igafile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">selector</span><span class=\"o\">=</span><span class=\"s1\">&#39;matplotlib&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.mesh_plot.plot_mesh", "modulename": "femtoscope.display.mesh_plot", "qualname": "plot_mesh", "kind": "function", "doc": "<p>Wrapper for mesh-plot functions plot_mesh_gmsh and plot_mesh_matplotlib.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>meshfile</strong> (String):\nName of the mesh file to read (can omit '.mesh') without full path.</li>\n<li><strong>mesh_dir</strong> (String, optional):\nPath to directory where the meshfile is located. If empty string,\nthe program looks for the mesh in global <code>MESH_DIR</code> directory.\nThe default is ''.</li>\n<li><strong>selector</strong> (String):\nPlot function selector {'gmsh' , 'matplotlib'}. The default is 'gmsh'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n<li><strong>save</strong> (bool):\nWhether or not the plots are saved. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">selector</span><span class=\"o\">=</span><span class=\"s1\">&#39;gmsh&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.mesh_plot.plot_mesh_gmsh", "modulename": "femtoscope.display.mesh_plot", "qualname": "plot_mesh_gmsh", "kind": "function", "doc": "<p>Plots 2D and 3D mesh using Gmsh GUI.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>meshfile</strong> (String):\nName of the mesh file to read (can omit '.vtk') without full path.</li>\n<li><strong>mesh_dir</strong> (String, optional):\nPath to directory where the meshfile is located. If empty string,\nthe program looks for the mesh in global <code>DATA_DIR</code> directory.\nThe default is ''.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.display.mesh_plot.plot_mesh_matplotlib", "modulename": "femtoscope.display.mesh_plot", "qualname": "plot_mesh_matplotlib", "kind": "function", "doc": "<p>Plots 2D mesh using matplotlib built-in routines.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>meshfile</strong> (String):\nName of the mesh file to read (can omit '.vtk') without full path.</li>\n<li><strong>data_dir</strong> (String, optional):\nPath to directory where the meshfile is located. If empty string,\nthe program looks for the mesh in global <code>DATA_DIR</code> directory.\nThe default is ''.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>title</strong> (str):\nTitle to be given to the figure.\nThe default is the positional argument [name]</li>\n<li><strong>xlabel</strong> (str):\nName of the x-axis. The default is ''</li>\n<li><strong>ylabel</strong> (str):\nName of the y-axis. The default is ''</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout", "modulename": "femtoscope.inout", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory", "modulename": "femtoscope.inout.meshfactory", "kind": "module", "doc": "<p>Created on Wed May 19 11:06:42 2021</p>\n\n<p>@author: Chad Briddon (&amp; Hugo L\u00e9vy)\nVisit <a href=\"https://github.com/C-Briddon/SELCIE/blob/main/SELCIE/MeshingTools.py\">https://github.com/C-Briddon/SELCIE/blob/main/SELCIE/MeshingTools.py</a></p>\n\n<p>Tools to produce and modify meshes to be used in simulations.</p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools", "kind": "class", "doc": "<p>Class used to construct user-defined meshes. Creates an open gmsh\nwindow when class is called.</p>\n\n<h2 id=\"attributes\"> Attributes</h2>\n\n<p>dim : int\n    Dimension of the mesh (2 or 3).\nboundaries : list\n    List of shapes boundaries represented via their dimTag i.e. tuples\n    (dim, tag). The dimTags are gathered by shape and encapsulated in\n    sublists for this purpose. Those entities are of dimension D-1.\nsource : list\n    List of shapes represented via their dimTag. The dimTags are gathered\n    by shape and encapsulated in sublists for this purpose. Those entities\n    are of dimension D.\nrefinement_settings : list\n    List of lists, each sublist containing mesh refinement settings of a\n    source element.\nsource_number : int\n    Number of sources currently defined in the Gmsh model.\nboundary_number : int\n    Number of boundaries currently defined in the Gmsh model.\nMin_length : float\n    Minimum distance between neighbouring points.\ngeom :\n    Shortcut for <em>gmsh.model.occ</em>.\nRcut : float\n    Radius that delimits the interior domain (disk in 2D / sphere in 3D).\n    Only relevant when dealing with exterior mesh generation.\ncenter_ext : tuple\n    Coordinates (x, y, z) of the geometrical center of the exterior domain.\n    Only relevant when dealing with exterior mesh generation.\noutfiles : list of str\n    List of generated mesh files (absolute path).</p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.__init__", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.__init__", "kind": "function", "doc": "<p>Construct a MeshingTools instance</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dimension</strong> (int):\nThe dimension of the mesh being constructed. Currently works for\n2D and 3D.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dimension</span></span>)</span>"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.dim", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.dim", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.boundaries", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.boundaries", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.source", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.source", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.refinement_settings", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.refinement_settings", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.source_number", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.source_number", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.boundary_number", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.boundary_number", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.Min_length", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.Min_length", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.geom", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.geom", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.Rcut", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.center_ext", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.center_ext", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.outfiles", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.outfiles", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.constrain_distance", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.constrain_distance", "kind": "function", "doc": "<p>@author: Chad Briddon\nRemoves points from list so that the distance between neighbouring\npoints is greater than the minimum gmsh line length. Is performed such\nthat the last point in the list will not be removed.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>points_list</strong> (list of list):\nList containing the points. Each element of the list is a list\ncontaining the x, y, and z coordinate of the point it represents.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>points_new</strong> (list of list):\nCopy of inputted list with points removed so that all neighbouring\npoints are seperated by the minimum allowed distance.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">points_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.points_to_surface", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.points_to_surface", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates closed surface whose boundary is defined by a list of points.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>points_list</strong> (list of list):\nList containing the points which define the exterior of the\nsurface. Each element of the list is a list containing the x, y,\nand z coordinate of the point it represents.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>SurfaceDimTag</strong> (tuple):\nTuple containing the dimension and tag of the generated surface.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">points_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.points_to_volume", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.points_to_volume", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates closed volume whose boundary is defined by list of contours.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>contour_list</strong> (list of list of list):\nList containing the contours which define the exterior of the\nvolume. The contours are themselves a list whose elements are\nlists, each containing the x, y, and z coordinate of the point\nit represents.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>VolumeDimTag</strong> (tuple):\nTuple containing the dimension and tag of the generated volume.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">contour_list</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.radial_cutoff", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.radial_cutoff", "kind": "function", "doc": "<p>@author: Chad Briddon\nApplies a radial cutoff to all shapes in open gmsh window.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cutoff_radius</strong> (float, optional):\nThe radial size of the cutoff. Any part of a shape that is\nfurther away from the origin than this radius will be erased.\nThe default is 1.0.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shape_DimTags</span>, </span><span class=\"param\"><span class=\"n\">cutoff_radius</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.rectangle_cutoff", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.rectangle_cutoff", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy\nApplies a radial cutoff to all shapes in open gmsh window.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>cutoff_radius</strong> (float, optional):\nThe radial size of the cutoff. Any part of a shape that is\nfurther away from the origin than this radius will be erased.\nThe default is 1.0.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shape_DimTags</span>, </span><span class=\"param\"><span class=\"n\">R</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_subdomain", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_subdomain", "kind": "function", "doc": "<p>@author: Chad Briddon\nCreates a subdomain from the shapes currently in an open gmsh window.\nShapes already present in previous subdomains will not be added to the\nnew one. This subdomain will be labeled by an index value corresponding\nto the next available integer value.</p>\n\n<p>The size of mesh cells at distances less than 'DistMin' from the\nboundary of this subdomain will be 'SizeMin', while at distances\ngreater than 'DistMax' cell size is 'SizeMax'. Between 'DistMin'\nand 'DistMax' cell size will increase linearly as illustrated below.</p>\n\n<pre><code>               DistMax\n                  |\n</code></pre>\n\n<p>SizeMax-             /--------\n                    /\n                   /\n                  /\nSizeMin-    o----/\n                 |\n              DistMin</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>CellSizeMin</strong> (float, optional):\nMinimum size of the mesh cells. The default is 0.1.</li>\n<li><strong>CellSizeMax</strong> (float, optional):\nMaximum size of the mesh cells. The default is 0.1.</li>\n<li><strong>DistMin</strong> (float, optional):\nAt distances less than this value the cell size is set to its\nminimum. The default is 0.0.</li>\n<li><strong>DistMax</strong> (float, optional):\nAt distances greater than this value the cell size is set to its\nmaximum. The default is 1.0.</li>\n<li><strong>NumPointsPerCurve</strong> (int, optional):\nNumber of points used to define each curve. The default is 1000.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">CellSizeMin</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">CellSizeMax</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">DistMin</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">DistMax</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">NumPointsPerCurve</span><span class=\"o\">=</span><span class=\"mi\">1000</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_background_mesh", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_background_mesh", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates a backgound mesh filling the space between shapes in the\nopen gmsh window and a circular/spherical shell.</p>\n\n<p>The size of mesh cells at distances less than 'DistMin' from the\nboundary of this background will be 'SizeMin', while at distances\ngreater than 'DistMax' cell size is 'SizeMax'. Between 'DistMin'\nand 'DistMax' cell size will increase linearly as illustrated below.</p>\n\n<pre><code>               DistMax\n                  |\n</code></pre>\n\n<p>SizeMax-             /--------\n                    /\n                   /\n                  /\nSizeMin-    o----/\n                 |\n              DistMin</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>CellSizeMin</strong> (float, optional):\nMinimum size of the mesh cells. The default is 0.1.</li>\n<li><strong>CellSizeMax</strong> (float, optional):\nMaximum size of the mesh cells. The default is 0.1.</li>\n<li><strong>DistMin</strong> (float, optional):\nAt distances less than this value the cell size is set to its\nminimum. The default is 0.0.</li>\n<li><strong>DistMax</strong> (float, optional):\nAt distances greater than this value the cell size is set to its\nmaximum. The default is 1.0.</li>\n<li><strong>NumPointsPerCurve</strong> (int, optional):\nNumber of points used to define each curve. The default is 1000.</li>\n<li><strong>background_radius</strong> (float, optional):\nRadius of the circular/spherical shell used to define the\nbackground mesh. The default is 1.0.</li>\n<li><strong>wall_thickness</strong> (None or float, optional):\nIf not None generates a boundary wall around the background mesh\nwith specified thickness. The default is None.</li>\n<li><strong>refine_outer_wall_boundary</strong> (bool, optional):\nIf True will also apply refinement to the exterior boundary of the\nouter wall (if exists). The default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">CellSizeMin</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">CellSizeMax</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>,</span><span class=\"param\">\t<span class=\"n\">DistMin</span><span class=\"o\">=</span><span class=\"mf\">0.0</span>,</span><span class=\"param\">\t<span class=\"n\">DistMax</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">NumPointsPerCurve</span><span class=\"o\">=</span><span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">background_radius</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">wall_thickness</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">refine_outer_wall_boundary</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.generate_mesh", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.generate_mesh", "kind": "function", "doc": "<p>@author: Chad Briddon &amp; Hugo L\u00e9vy\nGenerate and save mesh.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>filename</strong> (str, optional):\nIf not None then saves mesh as 'data/mesh/filename.vtk'. If\ndirectory 'Saved Meshes' does not exist in current directory then\none is created. The default is None.</li>\n<li><strong>show_mesh</strong> (bool, optional):\nIf True will open a window to allow viewing of the generated mesh.\nThe default is False.</li>\n<li><strong>embed_center</strong> (bool, optional):\nIf True, point of coordinates (0,0,0) is added to the mesh (useful\nfor inverse domains in cartesian coordinates).\nThe default is False.</li>\n<li><strong>unique_boundary</strong> (bool, optional):\nIf True, a single physical group will be created for all\nelementary entities that are parts of a shape's boundary.\nThe default is True.</li>\n<li><strong>ignoreTags</strong> (list, optional):\nList of physical groups not to be included in the final .vtk file.\nThe default is [].</li>\n<li><strong>convert</strong> (bool, optional):\nIf True, the mesh file exported by Gmsh will be converted so as to\nbe readable by Sfepy. The default is True.</li>\n<li><strong>exterior</strong> (bool, optional):\nIf True, construct a second mesh matching the main one on a\nspherical boundary (for 3D domain-splitting techniques).\nThe default is False.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n<li><strong>center_rf</strong> (list):\nSettings for refinement around the origin, namely\n[SizeMin, SizeMax, DistMin, DistMax].\nThe default is [1e-2, 1e-1, 0.1, 1.0].</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>outfiles</strong> (list of str):\nList of absolute path of output file(s).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">show_mesh</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">embed_center</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">symmetry</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">unique_boundary</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">ignoreTags</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">convert</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">exterior</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.pointInCurve", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.pointInCurve", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">point_tag</span>, </span><span class=\"param\"><span class=\"n\">curve_tag</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.add_shapes", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.add_shapes", "kind": "function", "doc": "<p>@author: Chad Briddon\nFusses together elements of 'shapes_1' and 'shapes_2' to form new group\nof shapes.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes_1, shapes_2</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_shapes</strong> (list of tuple):\nList of tuples representing the new group of shapes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes_1</span>, </span><span class=\"param\"><span class=\"n\">shapes_2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.subtract_shapes", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.subtract_shapes", "kind": "function", "doc": "<p>@author: Chad Briddon\nSubtracts elements of 'shapes_2' from 'shapes_1' to form new group of\nshapes.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes_1, shapes_2</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple\ncontains the dimension and tag of its corresponding shape.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_shapes</strong> (list of tuple):\nList of tuples representing the new group of shapes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes_1</span>, </span><span class=\"param\"><span class=\"n\">shapes_2</span>, </span><span class=\"param\"><span class=\"n\">removeObject</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">removeTool</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.intersect_shapes", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.intersect_shapes", "kind": "function", "doc": "<p>@author: Chad Briddon\nCreates group of shapes consisting of the intersection of elements\nfrom 'shapes_1' and 'shapes_2'.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes_1, shapes_2</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_shapes</strong> (list of tuple):\nList of tuples representing the new group of shapes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes_1</span>, </span><span class=\"param\"><span class=\"n\">shapes_2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.non_intersect_shapes", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.non_intersect_shapes", "kind": "function", "doc": "<p>@author: Chad Briddon\nCreates group of shapes consisting of the non-intersection of elements\nfrom 'shapes_1' and 'shapes_2'.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes_1, shapes_2</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>new_shapes</strong> (list of tuple):\nList of tuples representing the new group of shapes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes_1</span>, </span><span class=\"param\"><span class=\"n\">shapes_2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.rotate_x", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.rotate_x", "kind": "function", "doc": "<p>@author: Chad Briddon\nRotates group of shapes around the x-axis.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n<li><strong>rot_fraction</strong> (float):\nFraction of a full rotation the group will be rotated by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>shapes</strong> (list tuple):\nList of tuples representing the group of shapes. Is identical to\ninput 'shapes'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes</span>, </span><span class=\"param\"><span class=\"n\">rot_fraction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.rotate_y", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.rotate_y", "kind": "function", "doc": "<p>@author: Chad Briddon\nRotates group of shapes around the y-axis.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n<li><strong>rot_fraction</strong> (float):\nFraction of a full rotation the group will be rotated by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>shapes</strong> (list tuple):\nList of tuples representing the group of shapes. Is identical to\ninput 'shapes'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes</span>, </span><span class=\"param\"><span class=\"n\">rot_fraction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.rotate_z", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.rotate_z", "kind": "function", "doc": "<p>@author: Chad Briddon\nRotates group of shapes around the z-axis.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n<li><strong>rot_fraction</strong> (float):\nFraction of a full rotation the group will be rotated by.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>shapes</strong> (list tuple):\nList of tuples representing the group of shapes. Is identical to\ninput 'shapes'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes</span>, </span><span class=\"param\"><span class=\"n\">rot_fraction</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.translate_x", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.translate_x", "kind": "function", "doc": "<p>@author: Chad Briddon\nTranslates group of shapes in the x-direction.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n<li><strong>dx</strong> (float):\nAmount the group of shapes is to be translated by in the posative\nx-direction. If negative then translation will be in the negative\nx-direction.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>shapes</strong> (list tuple):\nList of tuples representing the group of shapes. Is identical to\ninput 'shapes'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes</span>, </span><span class=\"param\"><span class=\"n\">dx</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.translate_y", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.translate_y", "kind": "function", "doc": "<p>@author: Chad Briddon\nTranslates group of shapes in the y-direction.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n<li><strong>dy</strong> (float):\nAmount the group of shapes is to be translated by in the posative\ny-direction. If negative then translation will be in the negative\ny-direction.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>shapes</strong> (list tuple):\nList of tuples representing the group of shapes. Is identical to\ninput 'shapes'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes</span>, </span><span class=\"param\"><span class=\"n\">dy</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.translate_z", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.translate_z", "kind": "function", "doc": "<p>@author: Chad Briddon\nTranslates group of shapes in the z-direction.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>shapes</strong> (list of tuple):\nList of tuples representing a groups of shapes. Each tuple contains\nthe dimension and tag of its corresponding shape.</li>\n<li><strong>dz</strong> (float):\nAmount the group of shapes is to be translated by in the posative\nz-direction. If negative then translation will be in the negative\nz-direction.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>shapes</strong> (list tuple):\nList of tuples representing the group of shapes. Is identical to\ninput 'shapes'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">shapes</span>, </span><span class=\"param\"><span class=\"n\">dz</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_ellipse", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_ellipse", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates an ellipse in an open gmsh window with its centre of mass at\nthe origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rx</strong> (float, optional):\nEllipse radial size along x-axis. The default is 0.1.</li>\n<li><strong>ry</strong> (float, optional):\nEllipse radial size along y-axis. The default is 0.1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ellipse</strong> (list tuple):\nList containing tuple representing the ellipse.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rx</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">ry</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">xc</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">yc</span><span class=\"o\">=</span><span class=\"mi\">0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_exterior_mesh", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_exterior_mesh", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy\nGenerates a solid sphere whose surface DOFs match the last created\nshape boundary. Because the exterior mesh has to be spatially separated\nfrom all other geometries, its center of mass is set three radii away\nfrom the interior domain along the x-axis.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>exterior</strong> (list tuple):\nList containing tuple representing the exterior domain (sphere).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_rectangle", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_rectangle", "kind": "function", "doc": "<p>@author: Chad Briddon &amp; Hugo L\u00e9vy\nGenerates a rectangle in an open gmsh window with its centre of mass\nat the origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dx</strong> (float, optional):\nLength of rectangle along x-axis. The default is 0.2.</li>\n<li><strong>dy</strong> (float, optional):\nLength of rectangle along y-axis. The default is 0.2.</li>\n<li><strong>xll</strong> (float, optional):\nLow left corner x-coordinate. The default is 0.</li>\n<li><strong>yll</strong> (float, optional):\nLow left corner y-coordinate. The default is 0.</li>\n<li><strong>centered</strong> (bool, optional):\nWhether the rectangle is origin-centered. The default is False.</li>\n<li><strong>vperiodic</strong> (bool, optional):\nWhether the mesh is periodic in the vertical direction.\nThe default is False.</li>\n<li><strong>hperiodic</strong> (bool, optional):\nWhether the mesh is periodic in the horizontal direction.\nThe default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>rectangle</strong> (list tuple):\nList containing tuple representing the rectangle.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">dx</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">dy</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>,</span><span class=\"param\">\t<span class=\"n\">xll</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">yll</span><span class=\"o\">=</span><span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">centered</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">vperiodic</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">hperiodic</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_ellipsoid", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_ellipsoid", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates an ellipsoid in an open gmsh window with its centre of mass\nat the origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rx</strong> (float, optional):\nEllipsoid radial size along x-axis. The default is 0.1.</li>\n<li><strong>ry</strong> (float, optional):\nEllipsoid radial size along y-axis. The default is 0.1.</li>\n<li><strong>rz</strong> (float, optional):\nEllipsoid radial size along z-axis. The default is 0.1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ellipsoid</strong> (list tuple):\nList containing tuple representing the ellipsoid.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rx</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">ry</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">rz</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_box", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_box", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates a box in an open gmsh window with its centre of mass at the\norigin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>dx</strong> (float, optional):\nLength of box along x-axis. The default is 0.2.</li>\n<li><strong>dy</strong> (float, optional):\nLength of box along y-axis. The default is 0.2.</li>\n<li><strong>dz</strong> (float, optional):\nLength of box along z-axis. The default is 0.2.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>box</strong> (list tuple):\nList containing tuple representing the box.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dx</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>, </span><span class=\"param\"><span class=\"n\">dy</span><span class=\"o\">=</span><span class=\"mf\">0.2</span>, </span><span class=\"param\"><span class=\"n\">dz</span><span class=\"o\">=</span><span class=\"mf\">0.2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_cylinder", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_cylinder", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates a cylinder in an open gmsh window with its centre of mass at\nthe origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Length</strong> (float, optional):\nLength of cylinder. The default is 0.1.</li>\n<li><strong>r</strong> (float, optional):\nRadial size of cylinder. The default is 0.1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>cylinder</strong> (list tuple):\nList containing tuple representing the cylinder.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Length</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_cone", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_cone", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates a cone in an open gmsh window with its centre of mass at\nthe origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Length</strong> (float, optional):\nLength between tip and base of the cone. The default is 0.1.</li>\n<li><strong>r</strong> (float, optional):\nRadial size at the base of the cone. The default is 0.1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>cone</strong> (list tuple):\nList containing tuple representing the cone.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">Length</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">r</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_torus", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_torus", "kind": "function", "doc": "<p>@author: Chad Briddon\nGenerates a torus in an open gmsh window with its centre of mass at\nthe origin.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>r_hole</strong> (float, optional):\nRadius of hole through centre of the torus. The default is 0.1.</li>\n<li><strong>r_tube</strong> (float, optional):\nRadius of the torus tube. The default is 0.1.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>torus</strong> (list tuple):\nList containing tuple representing the torus.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">r_hole</span><span class=\"o\">=</span><span class=\"mf\">0.1</span>, </span><span class=\"param\"><span class=\"n\">r_tube</span><span class=\"o\">=</span><span class=\"mf\">0.1</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.create_disk_from_pts", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.create_disk_from_pts", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy\nGenerates a disk with a given number of evenly spaced points across\nthe circular boundary.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>radius</strong> (float):\nRadius of the disk.</li>\n<li><strong>N</strong> (int, optional):\nNumber of points defining the boundary. The default is 100.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>list</strong>: List of a single dimTag.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">radius</span>, </span><span class=\"param\"><span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">100</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.MeshingTools.extractTag", "modulename": "femtoscope.inout.meshfactory", "qualname": "MeshingTools.extractTag", "kind": "function", "doc": "<p>Fetch tags from a list of (dim, tag) [@author: Hugo L\u00e9vy]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dimTags</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.converter4sfepy", "modulename": "femtoscope.inout.meshfactory", "qualname": "converter4sfepy", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy\nConverts the .vtk mesh written by Gmsh into a new .vtk which facilitates\ntopological entity selection with Sfepy. Vertices are given a unique group\nid following the convention:\n    [0 - 99]    --> vertex tag (i.e. entity of dimension 0)\n    [100 - 199] --> edge tag (i.e. entity of dimension 1)\n    [200 - 299] --> facet tag (i.e. entity of dimension D-1)\n    [300 - xxx] --> cell tag (i.e. entity of dimension D)\nIf one node belong to several topological entities, it will be tagged with\nthe lowest dimension group id. For instance, a vertex belonging to a facet\nof tag 200 and a subvolume of tag 300 will be tagged 200. This is\nproblematic for subvolume selection. This difficulty is overcome by taking\nadvantage of the 'mat_ids' field that is readable by Sfepy.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fullfilename</strong> (str):\nAbsolute pathname of the .vtk mesh.</li>\n<li><strong>ignoreTags</strong> (list, optional):\nList of tags to be ignored in the new .vtk mesh. The default is [].</li>\n<li><strong>exterior</strong> (bool, optional):\nIf True, assume that the existing meshfile actually contains two\nmeshes to be separated into two distinct meshfiles.\nThe default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fullfilename</span>, </span><span class=\"param\"><span class=\"n\">ignoreTags</span><span class=\"o\">=</span><span class=\"p\">[]</span>, </span><span class=\"param\"><span class=\"n\">exterior</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">Rcut</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.mesh_from_geo", "modulename": "femtoscope.inout.meshfactory", "qualname": "mesh_from_geo", "kind": "function", "doc": "<p>Generate a mesh from an existing .geo file with Gmsh.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>geofile</strong> (str):\nName of the .geo file.</li>\n<li><strong>geo_dir</strong> (str, optional):\nDirectory where the .geo file is located. The default is None, in which\ncase the file will be sought in the MESH_DIR/geo directory.</li>\n<li><strong>param_dic</strong> (dict):\nDictionary containing key/value pairs to be modified.\nThe default is {}.</li>\n<li><strong>show_mesh</strong> (bool, optional):\nIf True will open a window to allow viewing of the generated mesh.\nThe default is False.</li>\n<li><strong>ignoreTags</strong> (list, optional):\nList of physical groups not to be included in the final .vtk file.\nThe default is [].</li>\n<li><strong>convert</strong> (bool, optional):\nIf True, the mesh file exported by Gmsh will be converted so as to\nbe readable by Sfepy. The default is True.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>exterior</strong> (bool, optional):\nIf True, construct a second mesh matching the main one on a\nspherical boundary (for 3D domain-splitting techniques).\nThe default is False.</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>outfile</strong> (str):\nAbsolute path of output file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">geofile</span>,</span><span class=\"param\">\t<span class=\"n\">geo_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">param_dic</span><span class=\"o\">=</span><span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">show_mesh</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">ignoreTags</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">convert</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.adjust_surface_nodes", "modulename": "femtoscope.inout.meshfactory", "qualname": "adjust_surface_nodes", "kind": "function", "doc": "<p>Re-adjust the DOFs belonging to a given surface from mesh <code>mesh_mod</code> to\nmatch those of the reference mesh <code>mesh_ref</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>file_ref</strong> (str):\nAbsolute pathname of the .vtk reference mesh.</li>\n<li><strong>file_mod</strong> (str):\nAbsolute pathname of the .vtk mesh to be modified.</li>\n<li><strong>surfTag</strong> (int):\nIdentifier of the entity where the DOFs are to be adjusted.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>None.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">file_ref</span>, </span><span class=\"param\"><span class=\"n\">file_mod</span>, </span><span class=\"param\"><span class=\"n\">surfTag</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.mesh_1d_interior", "modulename": "femtoscope.inout.meshfactory", "qualname": "mesh_1d_interior", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy\nCreate 1D mesh with adaptive mesh refinement around local variations of\nthe density distribution. Indeed, both the chameleon field and the\ngravitational potential are driven by matter distribution. Consequently,\nthey are likely to exhibit important variations at density jumps.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rho_func</strong> (function):\nFunction of a single coordinate returning the density.</li>\n<li><strong>Rcut</strong> (float):\nRadius that delimits the interior domain.</li>\n<li><strong>Nsamples</strong> (int, optional):\nNumber of samples to generate from the probability distribution\nfunction. The default is 100 000.</li>\n<li><strong>threshold</strong> (float, optional):\nMinimum probability in the pdf vector. Values below it will be set to\nthe threshold value. The default is 1e-3.</li>\n<li><strong>plot_hist</strong> (bool, optional):\nPlot the histogram of the draw. The default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>mesh_int</strong> (Sfepy Mesh instance):\n1D mesh with adaptive mesh refinement.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rho_func</span>, </span><span class=\"param\"><span class=\"n\">Rcut</span>, </span><span class=\"param\"><span class=\"n\">Nsamples</span><span class=\"o\">=</span><span class=\"mi\">100000</span>, </span><span class=\"param\"><span class=\"n\">threshold</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>, </span><span class=\"param\"><span class=\"n\">plot_hist</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.mesh_1d_exterior", "modulename": "femtoscope.inout.meshfactory", "qualname": "mesh_1d_exterior", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy\nCreate 1D mesh of the exterior domain with mesh refinement around rapid\nvariations of the chameleon field in the inverse coordinate eta. An\nanalytical study shows that dphi/deta is expected to be maximum at\n$$ \\eta_{SB} = \frac{m_{vac} R_{cut}^2}{3} $$</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>params</strong> (dict):\nDictionary of the parameters required for the analytical approximation.</li>\n<li><strong>Rcut</strong> (float):\nRadius that delimits the interior domain.</li>\n<li><strong>Nsamples</strong> (int, optional):\nNumber of samples to generate from the probability distribution\nfunction. The default is 100 000.</li>\n<li><strong>plot_hist</strong> (bool, optional):\nPlot the histogram of the draw. The default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>mesh_ext</strong> (Sfepy Mesh instance):\n1D mesh with adaptive mesh refinement.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">params</span>, </span><span class=\"param\"><span class=\"n\">Rcut</span>, </span><span class=\"param\"><span class=\"n\">Nsamples</span><span class=\"o\">=</span><span class=\"mi\">100000</span>, </span><span class=\"param\"><span class=\"n\">plot_hist</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.split_mesh_spheres", "modulename": "femtoscope.inout.meshfactory", "qualname": "split_mesh_spheres", "kind": "function", "doc": "<p>@author: Hugo L\u00e9vy\nSplit two meshed sub-shapes that are geometrically separable by a\nhyperplane into two distinct mesh files. The original mesh is then deleted.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Rcut</strong> (float):\nRadius of the sphere.</li>\n<li><strong>data</strong> (list):\nData list of a mesh representation in Sfepy.</li>\n<li><strong>mesh</strong> (Mesh instance):\nMesh instance of the original mesh (Sfepy class).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>outs</strong> (list):\nList of absolute path of output file(s).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Rcut</span>, </span><span class=\"param\"><span class=\"n\">data</span>, </span><span class=\"param\"><span class=\"n\">mesh</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.get_physical_group_ids", "modulename": "femtoscope.inout.meshfactory", "qualname": "get_physical_group_ids", "kind": "function", "doc": "<p>Returns the physical groups of a given mesh file (absolute pathname)\n[@author: Hugo L\u00e9vy]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s1\">&#39;.vtk&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.get_meshsource", "modulename": "femtoscope.inout.meshfactory", "qualname": "get_meshsource", "kind": "function", "doc": "<p>Returns the absolute pathname of a given meshfile\n[@author: Hugo L\u00e9vy]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s1\">&#39;.vtk&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.get_meshdim", "modulename": "femtoscope.inout.meshfactory", "qualname": "get_meshdim", "kind": "function", "doc": "<p>Return the dimension of a mesh [@author: Hugo L\u00e9vy]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s1\">&#39;.vtk&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.meshfactory.get_rcut", "modulename": "femtoscope.inout.meshfactory", "qualname": "get_rcut", "kind": "function", "doc": "<p>Returns the truncation radius [@author: Hugo L\u00e9vy]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">mesh_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">ext</span><span class=\"o\">=</span><span class=\"s1\">&#39;.vtk&#39;</span>, </span><span class=\"param\"><span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"s1\">&#39;cartesian&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.postprocessing", "modulename": "femtoscope.inout.postprocessing", "kind": "module", "doc": "<p>Created on Wed May 31 17:43:55 2023\nCreation of a new class for post-processing .vtk raw data.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult", "kind": "class", "doc": "<p>Class for post-processing FEM ouputs presaved in .vtk files.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>meshfiles</strong> (str or list of str):\nMesh files (.vtk) are used to reconstruct the problem instance.</li>\n<li><strong>resultfiles</strong> (str or list of str):\nResult files (.vtk) contain the FEM solution as well as some other\nrelevant fields.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order.</li>\n<li><strong>coorsys</strong> (str):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n<li><strong>conn</strong> (str):\nMethod for linking the interior domain with the exterior domain.\nThe default is 'connected'.</li>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the\nKlein-Gordon equation (dimensionless).</li>\n<li><strong>islinear</strong> (bool):\nWhether or not the PDE to be solved is linear.</li>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is <code>MESH_DIR</code>.</li>\n<li><strong>result_dir</strong> (str):\nDirectory where the result files are located.\nThe default is <code>RESULT_DIR</code>.</li>\n<li><strong>int_only</strong> (bool):\nWhether the solution on the exterior domain should be returned or not.</li>\n</ul>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.__init__", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">meshfiles</span>,</span><span class=\"param\">\t<span class=\"n\">resultfiles</span>,</span><span class=\"param\">\t<span class=\"n\">fem_order</span><span class=\"o\">=</span><span class=\"mi\">2</span>,</span><span class=\"param\">\t<span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">conn</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">islinear</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.meshfiles", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.meshfiles", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.resultfiles", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.resultfiles", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.fem_order", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.fem_order", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.coorsys", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.coorsys", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.alpha", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.islinear", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.islinear", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.mesh_dir", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.mesh_dir", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.result_dir", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.result_dir", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.int_only", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.int_only", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.dic_ext", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.dic_ext", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.retrieve_data", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.retrieve_data", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.postprocessing.PostProcessResult.evaluate_fem", "modulename": "femtoscope.inout.postprocessing", "qualname": "PostProcessResult.evaluate_fem", "kind": "function", "doc": "<p>Evaluate some source DOFs values at (coor1, coor2) using FEM\ninterpolation. The user may input DOFs of several types using the\n<code>keys</code> argument.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>coor1</strong> (1d-array or float):\nFirst coordinate.</li>\n<li><strong>coor2</strong> (1d-array or float):\nSecond coordinate.</li>\n<li><strong>keys</strong> (str or list of str):\nOne or several string corresponding to <code>dic_int</code> or <code>dic_ext</code> keys.</li>\n<li><strong>mode</strong> ({\u2018val\u2019, \u2018grad\u2019, \u2018div\u2019, \u2018cauchy_strain\u2019}, optional):\nThe evaluation mode: the field value (default), the field value\ngradient, divergence, or cauchy strain.</li>\n<li><strong>domain</strong> (str or list of str, optional):\nAre the DOFs values in the interior domain or in the exterior\ndomain ? The default is 'int'.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>array or list of arrays</strong>: The interpolated values at (coor1, coor2).</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coor1</span>, </span><span class=\"param\"><span class=\"n\">coor2</span>, </span><span class=\"param\"><span class=\"n\">keys</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;val&#39;</span>, </span><span class=\"param\"><span class=\"n\">domain</span><span class=\"o\">=</span><span class=\"s1\">&#39;int&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.vtkfactory", "modulename": "femtoscope.inout.vtkfactory", "kind": "module", "doc": "<p>Created on Thu Feb 10 14:11:19 2022</p>\n\n<p>Tools to create and read VTK files using meshio or (py)evtk.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.inout.vtkfactory.createUnstructuredVTK", "modulename": "femtoscope.inout.vtkfactory", "qualname": "createUnstructuredVTK", "kind": "function", "doc": "<p>Create a vtk file containing point coordinates and the values of one or\nseveral scalar fields at those points.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (1d numpy array):\nx-coordinates of the points.</li>\n<li><strong>y</strong> (1d numpy array):\ny-coordinates of the points.</li>\n<li><strong>z</strong> (1d numpy array):\nz-coordinates of the points.</li>\n<li><strong>vars_dic</strong> (dictionary):\nFields to be saved in the VTK file.\nFor example fields = {1_Xelec' : Ex , '2_Yelec' : Ey}, where V, Ex, Ey\nare 1D numpy arrays with same length as x, y, z. Quote from the\n'points.py' example: \"keys are sorted before exporting, hence it is\nuseful to prefix a number to determine an order\".</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (String):\nName of the vtkfile to be saved. The default is the current date-time.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>fullFileName</strong> (String):\nAbsolute pathname of the saved vtk.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">z</span>, </span><span class=\"param\"><span class=\"n\">vars_dic</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.inout.vtkfactory.createStructuredVTK", "modulename": "femtoscope.inout.vtkfactory", "qualname": "createStructuredVTK", "kind": "function", "doc": "<p>Create a .vtk file using the meshio module (it is part of femtoscope\ndependencies). The idea is to save FEM outputs the exact same way as sfepy,\nbut with more flexibility. In particular, we want to be able to save the\ncomplete solution of the FEM computation instead of only its values at the\nfinite element vertices (for higher order approximation).</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x</strong> (1d numpy array):\nx-coordinates of the points.</li>\n<li><strong>y</strong> (1d numpy array):\ny-coordinates of the points.</li>\n<li><strong>z</strong> (1d numpy array):\nz-coordinates of the points. Can be None.</li>\n<li><strong>fields</strong> (dictionary):\nFields to be saved in the VTK file.\nFor example fields = {1_Xelec' : Ex , '2_Yelec' : Ey}, where V, Ex, Ey\nare 1D numpy arrays with same length as x, y, z. Quote from the\n'points.py' example: \"keys are sorted before exporting, hence it is\nuseful to prefix a number to determine an order\".</li>\n<li><strong>cells</strong> (numpy array):\nConnectivity table for cells (nodes belonging to each cell).</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (String):\nName of the vtkfile to be saved. The default is the current date-time.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>fullFileName</strong> (String):\nAbsolute pathname of the saved vtk.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">z</span>, </span><span class=\"param\"><span class=\"n\">fields</span>, </span><span class=\"param\"><span class=\"n\">cells</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc", "modulename": "femtoscope.misc", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.analytical", "modulename": "femtoscope.misc.analytical", "kind": "module", "doc": "<p>Created on Fri Feb  4 14:06:53 2022</p>\n\n<p>Collection of analytical solutions for various test-cases.</p>\n\n<p>NB: source for the BSpline implementation\n<a href=\"https://stackoverflow.com/questions/28279060/splines-with-python-using-control-knots-and-endpoints\">https://stackoverflow.com/questions/28279060/splines-with-python-using-control-knots-and-endpoints</a>\n<a href=\"https://github.com/kawache/Python-B-spline-examples\">https://github.com/kawache/Python-B-spline-examples</a></p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration", "kind": "class", "doc": "<p>Class for computing the gravitational potential through direct numerical\nintegration (hence we refer to this method as 'semi-analytical').</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>coorsys</strong> (str):\nThe set of coordinates to be used ('cartesian' or 'spherical' or\n'cylindrical').</li>\n<li><strong>determinant</strong> (function):\nPre-factor of the volume element (coordinate-system-dependent).</li>\n<li><strong>denom</strong> (function):\nDenominator |r-r'| of the integrand.</li>\n<li><strong>integrand</strong> (function):\nFunction to be integrated with <code>scipy.integrate.tplquad</code>, which gives\nthe gravitational potential value.</li>\n<li><strong>rho</strong> (function):\nDensity function (arbitrary function with compact support).</li>\n<li><strong>a, b, gfun, hfun, qfun, rfun</strong> (parameters (see scipy doc in the link below)):\n<a href=\"https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.tplquad.html\">https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.tplquad.html</a></li>\n</ul>\n\n<h6 id=\"methods\">Methods</h6>\n\n<p>eval_mass :\n    Computes the total mass based on the mass distribution provided\n    by the user.\neval_potential :\n    Computes the gravitational potential at the desired location(s).</p>\n"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration.__init__", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration.__init__", "kind": "function", "doc": "<p>Construct a <code>PotentialByIntegration</code> instance. If preset is set to None,\nall the subsequent keyword arguments must be specified.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>See above class docstring.</strong></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">coorsys</span>,</span><span class=\"param\">\t<span class=\"n\">preset</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">a</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">b</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">gfun</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">hfun</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">qfun</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rfun</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration.coorsys", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration.coorsys", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration.denom", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration.denom", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration.integrand", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration.integrand", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration.eval_mass", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration.eval_mass", "kind": "function", "doc": "<p>Evaluation of the total mass of the source based on the integration\nof the denisty function.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration.eval_potential", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration.eval_potential", "kind": "function", "doc": "<p>Evaluation of the gravitational potential at coordinates\n(<code>coor1</code>, <code>coor2</code>, <code>coor3</code>) in a pre-determined coordinate system.\nActs as a wrapper for <code>_eval_pot_point</code>.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">coor1</span>, </span><span class=\"param\"><span class=\"n\">coor2</span>, </span><span class=\"param\"><span class=\"n\">coor3</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.PotentialByIntegration.print_coors", "modulename": "femtoscope.misc.analytical", "qualname": "PotentialByIntegration.print_coors", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coorsys</span>, </span><span class=\"param\"><span class=\"n\">coor1</span>, </span><span class=\"param\"><span class=\"n\">coor2</span>, </span><span class=\"param\"><span class=\"n\">coor3</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.potential_sphere", "modulename": "femtoscope.misc.analytical", "qualname": "potential_sphere", "kind": "function", "doc": "<p>Gravitational potential created by a perfect homogeneous solid\nsphere. Note that <code>M</code> and <code>rho</code> cannot be simultaneously None.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>r</strong> (float or ndarray):\nRadial distance from the mass center.</li>\n<li><strong>R</strong> (float):\nRadius of the sperical body.</li>\n<li><strong>G</strong> (float):\nGravitational constant.</li>\n<li><strong>M</strong> (float, optional):\nMass of the body. The default is None.</li>\n<li><strong>rho</strong> (float):\nDensity of the body. The default is None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ndarray</strong>: Gravitational potential at radii <code>r</code> from the center of the spherical\nbody.</li>\n</ul>\n\n<h6 id=\"see-also\">See Also</h6>\n\n<p><code>potential_ellipsoid</code>:  generalization to an oblate ellipsoid.  </p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">r</span>, </span><span class=\"param\"><span class=\"n\">R</span>, </span><span class=\"param\"><span class=\"n\">G</span>, </span><span class=\"param\"><span class=\"n\">M</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.grad_potential_sphere", "modulename": "femtoscope.misc.analytical", "qualname": "grad_potential_sphere", "kind": "function", "doc": "<p>Derivative(with respect to r) of the gravitational potential created by a\nperfect homogeneous solid sphere. Note that <code>M</code> and <code>rho</code> cannot be\nsimultaneously None.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>r</strong> (float or ndarray):\nRadial distance from the mass center.</li>\n<li><strong>R</strong> (float):\nRadius of the sperical body.</li>\n<li><strong>G</strong> (float):\nGravitational constant.</li>\n<li><strong>M</strong> (float, optional):\nMass of the body. The default is None.</li>\n<li><strong>rho</strong> (float):\nDensity of the body. The default is None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ndarray</strong>: Gravitational field at radii <code>r</code> from the center of the spherical\nbody.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">r</span>, </span><span class=\"param\"><span class=\"n\">R</span>, </span><span class=\"param\"><span class=\"n\">G</span>, </span><span class=\"param\"><span class=\"n\">M</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.potential_ellipsoid", "modulename": "femtoscope.misc.analytical", "qualname": "potential_ellipsoid", "kind": "function", "doc": "<p>Gravitational potential inside a homogeneous ellipsoid of revolution\nbounded by the surface $ X^2 + Y^2 + Z^2/(1-e^2) = a^2 $. Note that <code>ecc</code>\n&amp; <code>sc</code> cannot be simultaneously None and <code>M</code> &amp; <code>rho</code> cannot be\nsimultaneously None either.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>coors_cart</strong> (ndarray):\nCartesian coordinates (numpy array (:, 3)-shapped).</li>\n<li><strong>sa</strong> (float):\nSpheroid semi-major-axis.</li>\n<li><strong>G</strong> (float):\nGravitational constant.</li>\n<li><strong>ecc</strong> (float, optional):\nSpheroid eccentricity. The default is None.</li>\n<li><strong>sc</strong> (float, optional):\nSpheroid semi-minor-axis. The default is None.</li>\n<li><strong>M</strong> (float, optional):\nMass of the body. The default is None.</li>\n<li><strong>rho</strong> (float, optional):\nDensity of the body. The default is None.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>ndarray</strong>: Gravitational potential at <code>coors</code> locations.</li>\n</ul>\n\n<h6 id=\"see-also\">See Also</h6>\n\n<p><code>potential_sphere</code>:  Particular case of the perfect homogeneous sphere.  </p>\n\n<h6 id=\"references\">References</h6>\n\n<p>This implementation rely on <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> for the potential inside a homogeneous\nellipsoid of revolution and <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup> for the potential inside &amp; outside.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p>DOI:10.1093/oso/9780198786399.003.0015.&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p>HVO\u017dDARA, M., &amp; KOH\u00daT, I. (2011). \"Gravity field due to a\nhomogeneous oblate spheroid: Simple solution form and numerical\ncalculations\". Contributions to Geophysics and Geodesy, 41(4),\n307-327. <a href=\"https://doi.org/10.2478/v10126-011-0013-0\">https://doi.org/10.2478/v10126-011-0013-0</a>.&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">coors_cart</span>, </span><span class=\"param\"><span class=\"n\">sa</span>, </span><span class=\"param\"><span class=\"n\">G</span>, </span><span class=\"param\"><span class=\"n\">ecc</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">sc</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">M</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">rho</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.chameleon_radial", "modulename": "femtoscope.misc.analytical", "qualname": "chameleon_radial", "kind": "function", "doc": "<p>Approximate analytical solution of the chameleon field within and around a\nperfect homogeneous solid sphere.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>r</strong> (float or ndarray):\nRadial distance from the mass center.</li>\n<li><strong>R_A</strong> (float):\nRadius of the sperical body.</li>\n<li><strong>rho_in</strong> (float):\nDensity inside the spherical body.</li>\n<li><strong>rho_vac</strong> (float):\nVacuum density.</li>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the Klein-Gordon\nequation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>plot</strong> (bool):\nWhether or not to plot the resulting profile. The default is False.</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>phi</strong> (ndarray):\nChameleon scalar field at distance <code>r</code> from the body center.</li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>The solution returned by this function is only an approximate solution and\nby no means should be used to compute the <em>error</em> of a FEM result for\ninstance.</p>\n\n<h6 id=\"references\">References</h6>\n\n<p>See <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup> or <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup> for the analytical derivation of the solution of the\nKlein-Gordon equation.</p>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p>\"Chameleon cosmology\", Justin Khoury and Amanda Weltman,\nPhys. Rev. D 69, 044026 \u2013 Published 27 February 2004.&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p>\"Testing gravity in space : towards a realistic treatment of\nchameleon gravity in the MICROSCOPE mission\"\", Martin Pernot-Borr\u00e0s,\nPhD thesis manuscript, November 2020.&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">r</span>, </span><span class=\"param\"><span class=\"n\">R_A</span>, </span><span class=\"param\"><span class=\"n\">rho_in</span>, </span><span class=\"param\"><span class=\"n\">rho_vac</span>, </span><span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">plot</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.thin_shell", "modulename": "femtoscope.misc.analytical", "qualname": "thin_shell", "kind": "function", "doc": "<p>Compute the Thin-Shell thickness [see <code>chameleon_radial</code> function for\nfull documentation].</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">r</span>, </span><span class=\"param\"><span class=\"n\">R_A</span>, </span><span class=\"param\"><span class=\"n\">rho_in</span>, </span><span class=\"param\"><span class=\"n\">rho_vac</span>, </span><span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">npot</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.param_to_alpha", "modulename": "femtoscope.misc.analytical", "qualname": "param_to_alpha", "kind": "function", "doc": "<p>Mapping from the chameleon space parameter to the $\\alpha$ parameter used\nin the dimensionless Klein-Gordon equation.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Lambda</strong> (float or 1D array):\nEnergy scale.</li>\n<li><strong>beta</strong> (float or 1D array):\nCoupling constant.</li>\n<li><strong>npot</strong> (int or 1D array):\nExponent appearing in the Ratra-Peebles inverse power-law potential.</li>\n<li><strong>L_0</strong> (float, optional):\nCharacteristic length scale. The default is 1.0 m.</li>\n<li><strong>rho_0</strong> (float, optional):\nCharacteristic density. The default is 1.0 km.m^-3.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nDimensionless parameter built from chameleon parameters and physical\nconstants.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Lambda</span>, </span><span class=\"param\"><span class=\"n\">beta</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">L_0</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>, </span><span class=\"param\"><span class=\"n\">rho_0</span><span class=\"o\">=</span><span class=\"mf\">1.0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.analytical.plot_alpha_map", "modulename": "femtoscope.misc.analytical", "qualname": "plot_alpha_map", "kind": "function", "doc": "<p>Plot the $\\alpha$ parameter map.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Lambda_bounds</strong> (list):\nLambda range [Lambda_min, Lambda_max].</li>\n<li><strong>beta_bounds</strong> (list):\nbeta range [beta_min, beta_max].</li>\n<li><strong>npot</strong> (int):\nExponent appearing in the Ratra-Peebles inverse power-law potential.</li>\n<li><strong>L_0</strong> (float, optional):\nCharacteristic length scale. The default is 1.0.</li>\n<li><strong>rho_0</strong> (float, optional):\nCharacteristic density. The default is 1.0.</li>\n<li><strong>iso_alphas</strong> (list):\nList of the values of alpha to be emphasised on the map.\nThe default is [].</li>\n<li><strong>savefig</strong> (bool):\nSave the figure to pdf format. The default is False</li>\n<li><strong>ax</strong> (matplotlib.axes):\nAxes object of an external figure. The default is None.</li>\n<li><strong>fig</strong> (matplotlib.figure):\nFigure object of an external figure. The default is None.</li>\n<li><strong>colors</strong> (list):\nList of iso-alpha-line colors.</li>\n<li><strong>M_param</strong> (bool):\nIf True, use the M instead of beta (recalling that beta = Mpl/M).\nThe default is False.</li>\n<li><strong>figsize</strong> (pair of floats):\nWidth, height in inches. The default is (17.0, 7.0)</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">Lambda_bounds</span>,</span><span class=\"param\">\t<span class=\"n\">beta_bounds</span>,</span><span class=\"param\">\t<span class=\"n\">npot</span>,</span><span class=\"param\">\t<span class=\"n\">L_0</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">rho_0</span><span class=\"o\">=</span><span class=\"mf\">1.0</span>,</span><span class=\"param\">\t<span class=\"n\">iso_alphas</span><span class=\"o\">=</span><span class=\"p\">[]</span>,</span><span class=\"param\">\t<span class=\"n\">savefig</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.constants", "modulename": "femtoscope.misc.constants", "kind": "module", "doc": "<p>Created on Tue Apr 12 10:16:52 2022</p>\n\n<p>Definition of all the useful physical constants (S.I. units).</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.constants.C_LIGHT", "modulename": "femtoscope.misc.constants", "qualname": "C_LIGHT", "kind": "variable", "doc": "<p></p>\n", "default_value": "299792458"}, {"fullname": "femtoscope.misc.constants.G_GRAV", "modulename": "femtoscope.misc.constants", "qualname": "G_GRAV", "kind": "variable", "doc": "<p></p>\n", "default_value": "6.6743e-11"}, {"fullname": "femtoscope.misc.constants.H_BAR", "modulename": "femtoscope.misc.constants", "qualname": "H_BAR", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.054571817e-34"}, {"fullname": "femtoscope.misc.constants.M_PL", "modulename": "femtoscope.misc.constants", "qualname": "M_PL", "kind": "variable", "doc": "<p></p>\n", "default_value": "4.341358397809341e-09"}, {"fullname": "femtoscope.misc.constants.EV", "modulename": "femtoscope.misc.constants", "qualname": "EV", "kind": "variable", "doc": "<p></p>\n", "default_value": "1.602176634e-19"}, {"fullname": "femtoscope.misc.constants.RHO_FACTOR", "modulename": "femtoscope.misc.constants", "qualname": "RHO_FACTOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "4310130523930893.5"}, {"fullname": "femtoscope.misc.constants.R_EARTH", "modulename": "femtoscope.misc.constants", "qualname": "R_EARTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "6371000.0"}, {"fullname": "femtoscope.misc.constants.M_EARTH", "modulename": "femtoscope.misc.constants", "qualname": "M_EARTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "5.9722e+24"}, {"fullname": "femtoscope.misc.constants.MU_EARTH", "modulename": "femtoscope.misc.constants", "qualname": "MU_EARTH", "kind": "variable", "doc": "<p></p>\n", "default_value": "398600441800000.0"}, {"fullname": "femtoscope.misc.constants.LAMBDA_DE", "modulename": "femtoscope.misc.constants", "qualname": "LAMBDA_DE", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.0024"}, {"fullname": "femtoscope.misc.constants.R_SUN", "modulename": "femtoscope.misc.constants", "qualname": "R_SUN", "kind": "variable", "doc": "<p></p>\n", "default_value": "696340000.0"}, {"fullname": "femtoscope.misc.ivp_proj", "modulename": "femtoscope.misc.ivp_proj", "kind": "module", "doc": "<p>Created on Fri Jul 14 19:19:21 2023\nModification of scipy <code>solve_ivp</code> routine to enable the projection of the\ncurrent state onto some constraint manifold using the oblique projection\ntechnique.</p>\n\n<p>THIS IS ONLY AN ATTEMPT AT THE MOMENT, NOT A WORKING PIECE OF CODE!</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.SAFETY", "modulename": "femtoscope.misc.ivp_proj", "qualname": "SAFETY", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.9"}, {"fullname": "femtoscope.misc.ivp_proj.MIN_FACTOR", "modulename": "femtoscope.misc.ivp_proj", "qualname": "MIN_FACTOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "0.2"}, {"fullname": "femtoscope.misc.ivp_proj.MAX_FACTOR", "modulename": "femtoscope.misc.ivp_proj", "qualname": "MAX_FACTOR", "kind": "variable", "doc": "<p></p>\n", "default_value": "10"}, {"fullname": "femtoscope.misc.ivp_proj.rk_step", "modulename": "femtoscope.misc.ivp_proj", "qualname": "rk_step", "kind": "function", "doc": "<p>Perform a single Runge-Kutta step.</p>\n\n<p>This function computes a prediction of an explicit Runge-Kutta method and\nalso estimates the error of a less accurate method.</p>\n\n<p>Notation for Butcher tableau is as in <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fun</strong> (callable):\nRight-hand side of the system.</li>\n<li><strong>t</strong> (float):\nCurrent time.</li>\n<li><strong>y</strong> (ndarray, shape (n,)):\nCurrent state.</li>\n<li><strong>f</strong> (ndarray, shape (n,)):\nCurrent value of the derivative, i.e., <code>fun(x, y)</code>.</li>\n<li><strong>h</strong> (float):\nStep to use.</li>\n<li><strong>A</strong> (ndarray, shape (n_stages, n_stages)):\nCoefficients for combining previous RK stages to compute the next\nstage. For explicit methods the coefficients at and above the main\ndiagonal are zeros.</li>\n<li><strong>B</strong> (ndarray, shape (n_stages,)):\nCoefficients for combining RK stages for computing the final\nprediction.</li>\n<li><strong>C</strong> (ndarray, shape (n_stages,)):\nCoefficients for incrementing time for consecutive RK stages.\nThe value for the first stage is always zero.</li>\n<li><strong>K</strong> (ndarray, shape (n_stages + 1, n)):\nStorage array for putting RK stages here. Stages are stored in rows.\nThe last row is a linear combination of the previous rows with\ncoefficients</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>y_new</strong> (ndarray, shape (n,)):\nSolution at t + h computed with a higher accuracy.</li>\n<li><strong>f_new</strong> (ndarray, shape (n,)):\nDerivative <code>fun(t + h, y_new)</code>.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p>E. Hairer, S. P. Norsett G. Wanner, \"Solving Ordinary Differential\nEquations I: Nonstiff Problems\", Sec. II.4.&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">h</span>, </span><span class=\"param\"><span class=\"n\">A</span>, </span><span class=\"param\"><span class=\"n\">B</span>, </span><span class=\"param\"><span class=\"n\">C</span>, </span><span class=\"param\"><span class=\"n\">K</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.ivp_proj.cons_proj", "modulename": "femtoscope.misc.ivp_proj", "qualname": "cons_proj", "kind": "function", "doc": "<p>Project the current state <code>y</code> onto the constraint manifold using an oblique\n    projection technique.</p>\n\n<pre><code>Parameters\n----------\nfun : callable\n    Right-hand side of the system.\nt : float\n    Current time.\ny : ndarray, shape (n,)\n    Current state.\ncons : callable\n    Function defining the constraint I(t, X) = 0.\ngrad_cons : callable\n    Function defining the gradient of the constraint function at a given\n    position X, i.e. $\n</code></pre>\n\n<p>abla_{X} I$.</p>\n\n<pre><code>Returns\n-------\ny_new : ndarray, shape (n,)\n    Solution at t + h computed with a higher accuracy.\nf_new : ndarray, shape (n,)\n    Derivative ``fun(t + h, y_new)``.\n</code></pre>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">fun</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">cons</span>, </span><span class=\"param\"><span class=\"n\">grad_cons</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj", "kind": "class", "doc": "<p>Modified class for explicit Runge-Kutta methods. This portion of code\noriginate from <code>scipy.integrate._ivp.rk</code> and has been modified to allow for\na projection of the current state onto some constraint manifold.</p>\n\n<h2 id=\"new-arguments\">New arguments:</h2>\n\n<p>cons : callable\n    Function defining the constraint I(t, X) = 0.\ngrad_cons : callable\n    Function defining the gradient of the constraint function at a given\n    position X, i.e. $\\nabla_{X} I$.</p>\n", "bases": "scipy.integrate._ivp.base.OdeSolver"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.__init__", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fun</span>,</span><span class=\"param\">\t<span class=\"n\">t0</span>,</span><span class=\"param\">\t<span class=\"n\">y0</span>,</span><span class=\"param\">\t<span class=\"n\">t_bound</span>,</span><span class=\"param\">\t<span class=\"n\">max_step</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">rtol</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">atol</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span>,</span><span class=\"param\">\t<span class=\"n\">vectorized</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">first_step</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extraneous</span></span>)</span>"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.C", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.A", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.B", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.E", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.E", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.P", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.P", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.error_estimator_order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.error_estimator_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.n_stages", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.n_stages", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "NotImplemented"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.y_old", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.y_old", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.max_step", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.max_step", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.f", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.f", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.cons", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.cons", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.grad_cons", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.grad_cons", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.K", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.K", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.error_exponent", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.error_exponent", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RungeKuttaProj.h_previous", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RungeKuttaProj.h_previous", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RK23", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23", "kind": "class", "doc": "<p>Explicit Runge-Kutta method of order 3(2).</p>\n\n<p>This uses the Bogacki-Shampine pair of formulas <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup>. The error is controlled\nassuming accuracy of the second-order method, but steps are taken using the\nthird-order accurate formula (local extrapolation is done). A cubic Hermite\npolynomial is used for the dense output.</p>\n\n<p>Can be applied in the complex domain.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fun</strong> (callable):\nRight-hand side of the system. The calling signature is <code>fun(t, y)</code>.\nHere <code>t</code> is a scalar and there are two options for ndarray <code>y</code>.\nIt can either have shape (n,), then <code>fun</code> must return array_like with\nshape (n,). Or alternatively it can have shape (n, k), then <code>fun</code>\nmust return array_like with shape (n, k), i.e. each column\ncorresponds to a single column in <code>y</code>. The choice between the two\noptions is determined by <code>vectorized</code> argument (see below).</li>\n<li><strong>t0</strong> (float):\nInitial time.</li>\n<li><strong>y0</strong> (array_like, shape (n,)):\nInitial state.</li>\n<li><strong>t_bound</strong> (float):\nBoundary time - the integration won't continue beyond it. It also\ndetermines the direction of the integration.</li>\n<li><strong>first_step</strong> (float or None, optional):\nInitial step size. Default is <code>None</code> which means that the algorithm\nshould choose.</li>\n<li><strong>max_step</strong> (float, optional):\nMaximum allowed step size. Default is np.inf, i.e., the step size is not\nbounded and determined solely by the solver.</li>\n<li><strong>rtol, atol</strong> (float and array_like, optional):\nRelative and absolute tolerances. The solver keeps the local error\nestimates less than <code>atol + rtol * abs(y)</code>. Here <code>rtol</code> controls a\nrelative accuracy (number of correct digits), while <code>atol</code> controls\nabsolute accuracy (number of correct decimal places). To achieve the\ndesired <code>rtol</code>, set <code>atol</code> to be smaller than the smallest value that\ncan be expected from <code>rtol * abs(y)</code> so that <code>rtol</code> dominates the\nallowable error. If <code>atol</code> is larger than <code>rtol * abs(y)</code> the\nnumber of correct digits is not guaranteed. Conversely, to achieve the\ndesired <code>atol</code> set <code>rtol</code> such that <code>rtol * abs(y)</code> is always smaller\nthan <code>atol</code>. If components of y have different scales, it might be\nbeneficial to set different <code>atol</code> values for different components by\npassing array_like with shape (n,) for <code>atol</code>. Default values are\n1e-3 for <code>rtol</code> and 1e-6 for <code>atol</code>.</li>\n<li><strong>vectorized</strong> (bool, optional):\nWhether <code>fun</code> is implemented in a vectorized fashion. Default is False.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>n</strong> (int):\nNumber of equations.</li>\n<li><strong>status</strong> (string):\nCurrent status of the solver: 'running', 'finished' or 'failed'.</li>\n<li><strong>t_bound</strong> (float):\nBoundary time.</li>\n<li><strong>direction</strong> (float):\nIntegration direction: +1 or -1.</li>\n<li><strong>t</strong> (float):\nCurrent time.</li>\n<li><strong>y</strong> (ndarray):\nCurrent state.</li>\n<li><strong>t_old</strong> (float):\nPrevious time. None if no steps were made yet.</li>\n<li><strong>step_size</strong> (float):\nSize of the last successful step. None if no steps were made yet.</li>\n<li><strong>nfev</strong> (int):\nNumber evaluations of the system's right-hand side.</li>\n<li><strong>njev</strong> (int):\nNumber of evaluations of the Jacobian. Is always 0 for this solver as it does not use the Jacobian.</li>\n<li><strong>nlu</strong> (int):\nNumber of LU decompositions. Is always 0 for this solver.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p>P. Bogacki, L.F. Shampine, \"A 3(2) Pair of Runge-Kutta Formulas\",\nAppl. Math. Lett. Vol. 2, No. 4. pp. 321-325, 1989.&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "bases": "RungeKuttaProj"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.error_estimator_order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.error_estimator_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "2"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.n_stages", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.n_stages", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "3"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.C", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([0.  , 0.5 , 0.75])"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.A", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([[0.  , 0.  , 0.  ],\n       [0.5 , 0.  , 0.  ],\n       [0.  , 0.75, 0.  ]])"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.B", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([0.22222222, 0.33333333, 0.44444444])"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.E", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.E", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([ 0.06944444, -0.08333333, -0.11111111,  0.125     ])"}, {"fullname": "femtoscope.misc.ivp_proj.RK23.P", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK23.P", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([[ 1.        , -1.33333333,  0.55555556],\n       [ 0.        ,  1.        , -0.66666667],\n       [ 0.        ,  1.33333333, -0.88888889],\n       [ 0.        , -1.        ,  1.        ]])"}, {"fullname": "femtoscope.misc.ivp_proj.RK45", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45", "kind": "class", "doc": "<p>Explicit Runge-Kutta method of order 5(4).</p>\n\n<p>This uses the Dormand-Prince pair of formulas <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup>. The error is controlled\nassuming accuracy of the fourth-order method accuracy, but steps are taken\nusing the fifth-order accurate formula (local extrapolation is done).\nA quartic interpolation polynomial is used for the dense output <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>.</p>\n\n<p>Can be applied in the complex domain.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fun</strong> (callable):\nRight-hand side of the system. The calling signature is <code>fun(t, y)</code>.\nHere <code>t</code> is a scalar, and there are two options for the ndarray <code>y</code>:\nIt can either have shape (n,); then <code>fun</code> must return array_like with\nshape (n,). Alternatively it can have shape (n, k); then <code>fun</code>\nmust return an array_like with shape (n, k), i.e., each column\ncorresponds to a single column in <code>y</code>. The choice between the two\noptions is determined by <code>vectorized</code> argument (see below).</li>\n<li><strong>t0</strong> (float):\nInitial time.</li>\n<li><strong>y0</strong> (array_like, shape (n,)):\nInitial state.</li>\n<li><strong>t_bound</strong> (float):\nBoundary time - the integration won't continue beyond it. It also\ndetermines the direction of the integration.</li>\n<li><strong>first_step</strong> (float or None, optional):\nInitial step size. Default is <code>None</code> which means that the algorithm\nshould choose.</li>\n<li><strong>max_step</strong> (float, optional):\nMaximum allowed step size. Default is np.inf, i.e., the step size is not\nbounded and determined solely by the solver.</li>\n<li><strong>rtol, atol</strong> (float and array_like, optional):\nRelative and absolute tolerances. The solver keeps the local error\nestimates less than <code>atol + rtol * abs(y)</code>. Here <code>rtol</code> controls a\nrelative accuracy (number of correct digits), while <code>atol</code> controls\nabsolute accuracy (number of correct decimal places). To achieve the\ndesired <code>rtol</code>, set <code>atol</code> to be smaller than the smallest value that\ncan be expected from <code>rtol * abs(y)</code> so that <code>rtol</code> dominates the\nallowable error. If <code>atol</code> is larger than <code>rtol * abs(y)</code> the\nnumber of correct digits is not guaranteed. Conversely, to achieve the\ndesired <code>atol</code> set <code>rtol</code> such that <code>rtol * abs(y)</code> is always smaller\nthan <code>atol</code>. If components of y have different scales, it might be\nbeneficial to set different <code>atol</code> values for different components by\npassing array_like with shape (n,) for <code>atol</code>. Default values are\n1e-3 for <code>rtol</code> and 1e-6 for <code>atol</code>.</li>\n<li><strong>vectorized</strong> (bool, optional):\nWhether <code>fun</code> is implemented in a vectorized fashion. Default is False.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>n</strong> (int):\nNumber of equations.</li>\n<li><strong>status</strong> (string):\nCurrent status of the solver: 'running', 'finished' or 'failed'.</li>\n<li><strong>t_bound</strong> (float):\nBoundary time.</li>\n<li><strong>direction</strong> (float):\nIntegration direction: +1 or -1.</li>\n<li><strong>t</strong> (float):\nCurrent time.</li>\n<li><strong>y</strong> (ndarray):\nCurrent state.</li>\n<li><strong>t_old</strong> (float):\nPrevious time. None if no steps were made yet.</li>\n<li><strong>step_size</strong> (float):\nSize of the last successful step. None if no steps were made yet.</li>\n<li><strong>nfev</strong> (int):\nNumber evaluations of the system's right-hand side.</li>\n<li><strong>njev</strong> (int):\nNumber of evaluations of the Jacobian. Is always 0 for this solver as it does not use the Jacobian.</li>\n<li><strong>nlu</strong> (int):\nNumber of LU decompositions. Is always 0 for this solver.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p>J. R. Dormand, P. J. Prince, \"A family of embedded Runge-Kutta\nformulae\", Journal of Computational and Applied Mathematics, Vol. 6,\nNo. 1, pp. 19-26, 1980.&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p>L. W. Shampine, \"Some Practical Runge-Kutta Formulas\", Mathematics\nof Computation,, Vol. 46, No. 173, pp. 135-150, 1986.&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "bases": "RungeKuttaProj"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "5"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.error_estimator_order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.error_estimator_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "4"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.n_stages", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.n_stages", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "6"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.C", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([0.        , 0.2       , 0.3       , 0.8       , 0.88888889,\n       1.        ])"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.A", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([[  0.        ,   0.        ,   0.        ,   0.        ,\n          0.        ],\n       [  0.2       ,   0.        ,   0.        ,   0.        ,\n          0.        ],\n       [  0.075     ,   0.225     ,   0.        ,   0.        ,\n          0.        ],\n       [  0.97777778,  -3.73333333,   3.55555556,   0.        ,\n          0.        ],\n       [  2.95259869, -11.59579332,   9.82289285,  -0.29080933,\n          0.        ],\n       [  2.84627525, -10.75757576,   8.90642272,   0.27840909,\n         -0.2735313 ]])"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.B", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([ 0.09114583,  0.        ,  0.4492363 ,  0.65104167, -0.32237618,\n        0.13095238])"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.E", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.E", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([-0.00123264,  0.        ,  0.00425277, -0.03697917,  0.0508638 ,\n       -0.04190476,  0.025     ])"}, {"fullname": "femtoscope.misc.ivp_proj.RK45.P", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RK45.P", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([[ 1.        , -2.85358007,  3.07174346, -1.12701757],\n       [ 0.        ,  0.        ,  0.        ,  0.        ],\n       [ 0.        ,  4.02313338, -6.24932157,  2.67542448],\n       [ 0.        , -3.73240196, 10.06897059, -5.68552696],\n       [ 0.        ,  2.55480383, -6.39911238,  3.52193237],\n       [ 0.        , -1.37442411,  3.27265775, -1.76728126],\n       [ 0.        ,  1.38246893, -3.76493786,  2.38246893]])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853", "kind": "class", "doc": "<p>Explicit Runge-Kutta method of order 8.</p>\n\n<p>This is a Python implementation of \"DOP853\" algorithm originally written\nin Fortran <sup class=\"footnote-ref\" id=\"fnref-1\"><a href=\"#fn-1\">1</a></sup>, <sup class=\"footnote-ref\" id=\"fnref-2\"><a href=\"#fn-2\">2</a></sup>. Note that this is not a literate translation, but\nthe algorithmic core and coefficients are the same.</p>\n\n<p>Can be applied in the complex domain.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>fun</strong> (callable):\nRight-hand side of the system. The calling signature is <code>fun(t, y)</code>.\nHere, <code>t</code> is a scalar, and there are two options for the ndarray <code>y</code>:\nIt can either have shape (n,); then <code>fun</code> must return array_like with\nshape (n,). Alternatively it can have shape (n, k); then <code>fun</code>\nmust return an array_like with shape (n, k), i.e. each column\ncorresponds to a single column in <code>y</code>. The choice between the two\noptions is determined by <code>vectorized</code> argument (see below).</li>\n<li><strong>t0</strong> (float):\nInitial time.</li>\n<li><strong>y0</strong> (array_like, shape (n,)):\nInitial state.</li>\n<li><strong>t_bound</strong> (float):\nBoundary time - the integration won't continue beyond it. It also\ndetermines the direction of the integration.</li>\n<li><strong>first_step</strong> (float or None, optional):\nInitial step size. Default is <code>None</code> which means that the algorithm\nshould choose.</li>\n<li><strong>max_step</strong> (float, optional):\nMaximum allowed step size. Default is np.inf, i.e. the step size is not\nbounded and determined solely by the solver.</li>\n<li><strong>rtol, atol</strong> (float and array_like, optional):\nRelative and absolute tolerances. The solver keeps the local error\nestimates less than <code>atol + rtol * abs(y)</code>. Here <code>rtol</code> controls a\nrelative accuracy (number of correct digits), while <code>atol</code> controls\nabsolute accuracy (number of correct decimal places). To achieve the\ndesired <code>rtol</code>, set <code>atol</code> to be smaller than the smallest value that\ncan be expected from <code>rtol * abs(y)</code> so that <code>rtol</code> dominates the\nallowable error. If <code>atol</code> is larger than <code>rtol * abs(y)</code> the\nnumber of correct digits is not guaranteed. Conversely, to achieve the\ndesired <code>atol</code> set <code>rtol</code> such that <code>rtol * abs(y)</code> is always smaller\nthan <code>atol</code>. If components of y have different scales, it might be\nbeneficial to set different <code>atol</code> values for different components by\npassing array_like with shape (n,) for <code>atol</code>. Default values are\n1e-3 for <code>rtol</code> and 1e-6 for <code>atol</code>.</li>\n<li><strong>vectorized</strong> (bool, optional):\nWhether <code>fun</code> is implemented in a vectorized fashion. Default is False.</li>\n</ul>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>n</strong> (int):\nNumber of equations.</li>\n<li><strong>status</strong> (string):\nCurrent status of the solver: 'running', 'finished' or 'failed'.</li>\n<li><strong>t_bound</strong> (float):\nBoundary time.</li>\n<li><strong>direction</strong> (float):\nIntegration direction: +1 or -1.</li>\n<li><strong>t</strong> (float):\nCurrent time.</li>\n<li><strong>y</strong> (ndarray):\nCurrent state.</li>\n<li><strong>t_old</strong> (float):\nPrevious time. None if no steps were made yet.</li>\n<li><strong>step_size</strong> (float):\nSize of the last successful step. None if no steps were made yet.</li>\n<li><strong>nfev</strong> (int):\nNumber evaluations of the system's right-hand side.</li>\n<li><strong>njev</strong> (int):\nNumber of evaluations of the Jacobian. Is always 0 for this solver\nas it does not use the Jacobian.</li>\n<li><strong>nlu</strong> (int):\nNumber of LU decompositions. Is always 0 for this solver.</li>\n</ul>\n\n<h6 id=\"references\">References</h6>\n\n<div class=\"footnotes\">\n<hr />\n<ol>\n<li id=\"fn-1\">\n<p>E. Hairer, S. P. Norsett G. Wanner, \"Solving Ordinary Differential\nEquations I: Nonstiff Problems\", Sec. II.&#160;<a href=\"#fnref-1\" class=\"footnoteBackLink\" title=\"Jump back to footnote 1 in the text.\">&#8617;</a></p>\n</li>\n\n<li id=\"fn-2\">\n<p><a href=\"http://www.unige.ch/~hairer/software.html\">Page with original Fortran code of DOP853\n</a>.&#160;<a href=\"#fnref-2\" class=\"footnoteBackLink\" title=\"Jump back to footnote 2 in the text.\">&#8617;</a></p>\n</li>\n</ol>\n</div>\n", "bases": "RungeKuttaProj"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.__init__", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">fun</span>,</span><span class=\"param\">\t<span class=\"n\">t0</span>,</span><span class=\"param\">\t<span class=\"n\">y0</span>,</span><span class=\"param\">\t<span class=\"n\">t_bound</span>,</span><span class=\"param\">\t<span class=\"n\">max_step</span><span class=\"o\">=</span><span class=\"n\">inf</span>,</span><span class=\"param\">\t<span class=\"n\">rtol</span><span class=\"o\">=</span><span class=\"mf\">0.001</span>,</span><span class=\"param\">\t<span class=\"n\">atol</span><span class=\"o\">=</span><span class=\"mf\">1e-06</span>,</span><span class=\"param\">\t<span class=\"n\">vectorized</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">first_step</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">extraneous</span></span>)</span>"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.n_stages", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.n_stages", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "12"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "8"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.error_estimator_order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.error_estimator_order", "kind": "variable", "doc": "<p></p>\n", "annotation": ": int", "default_value": "7"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.A", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.A", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([[ 0.        ,  0.        ,  0.        , ...,  0.        ,\n         0.        ,  0.        ],\n       [ 0.05260015,  0.        ,  0.        , ...,  0.        ,\n         0.        ,  0.        ],\n       [ 0.01972506,  0.05917517,  0.        , ...,  0.        ,\n         0.        ,  0.        ],\n       ...,\n       [ 0.47766254,  0.        ,  0.        , ...,  0.        ,\n         0.        ,  0.        ],\n       [-0.93714243,  0.        ,  0.        , ..., -3.04676447,\n         0.        ,  0.        ],\n       [ 2.27331015,  0.        ,  0.        , ..., 12.36056718,\n         0.64339275,  0.        ]])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.B", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.B", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([ 0.05429373,  0.        ,  0.        ,  0.        ,  0.        ,\n        4.45031289,  1.8915179 , -5.80120396,  0.31116437, -0.15216095,\n        0.2013654 ,  0.04471062])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.C", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.C", "kind": "variable", "doc": "<p></p>\n", "annotation": ": numpy.ndarray", "default_value": "array([0.        , 0.05260015, 0.07890023, 0.11835034, 0.28164966,\n       0.33333333, 0.25      , 0.30769231, 0.65128205, 0.6       ,\n       0.85714286, 1.        ])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.E3", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.E3", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([-0.18980075,  0.        ,  0.        ,  0.        ,  0.        ,\n        4.45031289,  1.8915179 , -5.80120396, -0.42268232, -0.15216095,\n        0.2013654 ,  0.02265179,  0.        ])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.E5", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.E5", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([ 0.01312004,  0.        ,  0.        ,  0.        ,  0.        ,\n       -1.22515645, -0.49575895,  1.66437718, -0.35032885,  0.33417912,\n        0.08192321, -0.02235531,  0.        ])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.D", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.D", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([[-8.42893828e+00,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00,  0.00000000e+00,  5.66714954e-01,\n        -3.06894995e+00,  2.38466766e+00,  2.11703458e+00,\n        -8.71391584e-01,  2.24043743e+00,  6.31578779e-01,\n        -8.89903365e-02,  1.81485055e+01, -9.19463239e+00,\n        -4.43603639e+00],\n       [ 1.04275086e+01,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00,  0.00000000e+00,  2.42283492e+02,\n         1.65200452e+02, -3.74546755e+02, -2.21136669e+01,\n         7.73343267e+00, -3.06740847e+01, -9.33213053e+00,\n         1.56972381e+01, -3.11394032e+01, -9.35292436e+00,\n         3.58168415e+01],\n       [ 1.99850532e+01,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00,  0.00000000e+00, -3.87037309e+02,\n        -1.89178138e+02,  5.27808159e+02, -1.15739025e+01,\n         6.88123269e+00, -1.00060510e+00,  7.77713780e-01,\n        -2.77820575e+00, -6.01966952e+01,  8.43204055e+01,\n         1.19922911e+01],\n       [-2.56939335e+01,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00,  0.00000000e+00, -1.54189749e+02,\n        -2.31529379e+02,  3.57639118e+02,  9.34053242e+01,\n        -3.74583231e+01,  1.04099650e+02,  2.98402934e+01,\n        -4.35334566e+01,  9.63245540e+01, -3.91772617e+01,\n        -1.49726836e+02]])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.A_EXTRA", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.A_EXTRA", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([[ 5.61675023e-02,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\n         2.53500210e-01, -2.46239037e-01, -1.24191423e-01,\n         1.53291798e-01,  8.20105230e-03,  7.56789766e-03,\n        -8.29800000e-03,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00],\n       [ 3.18346482e-02,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00,  0.00000000e+00,  2.83009097e-02,\n         5.35419883e-02, -5.49237486e-02,  0.00000000e+00,\n         0.00000000e+00, -1.08347329e-04,  3.82571091e-04,\n        -3.40465009e-04,  1.41312444e-01,  0.00000000e+00,\n         0.00000000e+00],\n       [-4.28896302e-01,  0.00000000e+00,  0.00000000e+00,\n         0.00000000e+00,  0.00000000e+00, -4.69762142e+00,\n         7.68342120e+00,  4.06898982e+00,  3.56727187e-01,\n         0.00000000e+00,  0.00000000e+00,  0.00000000e+00,\n        -1.39902417e-03,  2.94751479e+00, -9.15095847e+00,\n         0.00000000e+00]])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.C_EXTRA", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.C_EXTRA", "kind": "variable", "doc": "<p></p>\n", "default_value": "array([0.1       , 0.2       , 0.77777778])"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.K_extended", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.K_extended", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.DOP853.K", "modulename": "femtoscope.misc.ivp_proj", "qualname": "DOP853.K", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RkDenseOutput", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RkDenseOutput", "kind": "class", "doc": "<p>Base class for local interpolant over step made by an ODE solver.</p>\n\n<p>It interpolates between <code>t_min</code> and <code>t_max</code> (see Attributes below).\nEvaluation outside this interval is not forbidden, but the accuracy is not\nguaranteed.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>t_min, t_max</strong> (float):\nTime range of the interpolation.</li>\n</ul>\n", "bases": "scipy.integrate._ivp.base.DenseOutput"}, {"fullname": "femtoscope.misc.ivp_proj.RkDenseOutput.__init__", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RkDenseOutput.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t_old</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">y_old</span>, </span><span class=\"param\"><span class=\"n\">Q</span></span>)</span>"}, {"fullname": "femtoscope.misc.ivp_proj.RkDenseOutput.h", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RkDenseOutput.h", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RkDenseOutput.Q", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RkDenseOutput.Q", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RkDenseOutput.order", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RkDenseOutput.order", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.RkDenseOutput.y_old", "modulename": "femtoscope.misc.ivp_proj", "qualname": "RkDenseOutput.y_old", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.Dop853DenseOutput", "modulename": "femtoscope.misc.ivp_proj", "qualname": "Dop853DenseOutput", "kind": "class", "doc": "<p>Base class for local interpolant over step made by an ODE solver.</p>\n\n<p>It interpolates between <code>t_min</code> and <code>t_max</code> (see Attributes below).\nEvaluation outside this interval is not forbidden, but the accuracy is not\nguaranteed.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>t_min, t_max</strong> (float):\nTime range of the interpolation.</li>\n</ul>\n", "bases": "scipy.integrate._ivp.base.DenseOutput"}, {"fullname": "femtoscope.misc.ivp_proj.Dop853DenseOutput.__init__", "modulename": "femtoscope.misc.ivp_proj", "qualname": "Dop853DenseOutput.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t_old</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">y_old</span>, </span><span class=\"param\"><span class=\"n\">F</span></span>)</span>"}, {"fullname": "femtoscope.misc.ivp_proj.Dop853DenseOutput.h", "modulename": "femtoscope.misc.ivp_proj", "qualname": "Dop853DenseOutput.h", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.Dop853DenseOutput.F", "modulename": "femtoscope.misc.ivp_proj", "qualname": "Dop853DenseOutput.F", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.ivp_proj.Dop853DenseOutput.y_old", "modulename": "femtoscope.misc.ivp_proj", "qualname": "Dop853DenseOutput.y_old", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.plot_coor_transform", "modulename": "femtoscope.misc.plot_coor_transform", "kind": "module", "doc": "<p>Created on Tue Jan 24 09:27:50 2023\nIllustration des transformations {compactification + kelvin inversion} sur\nune image simple g\u00e9n\u00e9r\u00e9e en Python</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.sph", "modulename": "femtoscope.misc.sph", "kind": "module", "doc": "<p>Created on Mon Feb 20 08:52:25 2023\nCollection of spherical harmonic routines using PyshTools</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.sph.AxiSymSph", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph", "kind": "class", "doc": "<p>Class for computing and storing spherical harmonic coefficients of a\naxi-symmetric scalar field (the field does not depend on longitude).</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>c_lm</strong> (<code>pyshtools.shclasses.shcoeffs.SHRealCoeffs</code> class instance):\nPyshtools Class for spherical harmonic coefficients.</li>\n<li><strong>grid</strong> (<code>pyshtools.shclasses.shgrid.DHRealGrid</code> class instance):\nPyshtools Class for real Driscoll and Healy (1994) sampled grids.</li>\n<li><strong>f_lm</strong> (numpy 2d-array):\nArray containing the spherical harmonic coefficients (all degrees /\nall orders).</li>\n<li><strong>f_l0</strong> (numpy 1d-array):\nArray containing the spherical harmonic coefficients of order m=0.</li>\n<li><strong>lats</strong> (numpy 1d-array):\nArray of the latitudes of each row of the gridded data.</li>\n<li><strong>lons</strong> (numpy 1d-array):\nArray of the longitudes of each column of the gridded data.</li>\n<li><strong>thetas</strong> (numpy 1d-array):\nArray of the co-latitudes of each row of the gridded data.</li>\n</ul>\n"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.__init__", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.__init__", "kind": "function", "doc": "<p>Construct a AxiSymSph instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>Lmax</strong> (int):\nMaximum degree of the expansion.</li>\n<li><strong>normalization</strong> (str, optional):\nThe normalization of the coefficients (see Pyshtools docs).\nThe default is 'ortho'.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Lmax</span>, </span><span class=\"param\"><span class=\"n\">normalization</span><span class=\"o\">=</span><span class=\"s1\">&#39;ortho&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.c_lm", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.c_lm", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.grid", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.grid", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.lats", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.lats", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.lons", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.lons", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.thetas", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.thetas", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.compute_expansion", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.compute_expansion", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">eval_func</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.plot_spectrum", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.plot_spectrum", "kind": "function", "doc": "<p>Plot the spectrum as a function of spherical harmonic degree. See\n<a href=\"https://github.com/SHTOOLS/SHTOOLS/blob/master/pyshtools/shclasses/shcoeffs.py#L2310\">https://github.com/SHTOOLS/SHTOOLS/blob/master/pyshtools/shclasses/shcoeffs.py#L2310</a>\nfor kwargs usage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.plot_spectrum2d", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.plot_spectrum2d", "kind": "function", "doc": "<p>Plot the spectrum as a function of spherical harmonic degree and order.\nSee <a href=\"https://github.com/SHTOOLS/SHTOOLS/blob/master/pyshtools/shclasses/shcoeffs.py#L2654\">https://github.com/SHTOOLS/SHTOOLS/blob/master/pyshtools/shclasses/shcoeffs.py#L2654</a>\nfor kwargs usage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.plot_grid", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.plot_grid", "kind": "function", "doc": "<p>Plot the 'raw' data on a grid (2d map if dim==2, spheroid if dim==3).\nSee <a href=\"https://github.com/SHTOOLS/SHTOOLS/blob/master/pyshtools/shclasses/shgrid.py#L1202\">https://github.com/SHTOOLS/SHTOOLS/blob/master/pyshtools/shclasses/shgrid.py#L1202</a>\nfor kwargs usage.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">2</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.sph.AxiSymSph.plot_f_l0", "modulename": "femtoscope.misc.sph", "qualname": "AxiSymSph.plot_f_l0", "kind": "function", "doc": "<p>Wrapper for <code>_plot_f_l0</code>, see below.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">logbool</span><span class=\"o\">=</span><span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">monopole</span><span class=\"o\">=</span><span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.sph.extract_coeffs", "modulename": "femtoscope.misc.sph", "qualname": "extract_coeffs", "kind": "function", "doc": "<p>Convert $(C_{lm}, S_{lm})$ coefficients (pyshtools' output) to $\\phi_{lm}$.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>CSlm</strong> (3d-array):\nArray containing $C_{lm}$ and $S_{lm}$ coefficients.\n    1st dimension : C or S\n    2nd dimension : degree l\n    3rd dimension : order m</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>f_lm. 2d-array</strong>: Spherical harmonic coefficients</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">CSlm</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.spline", "modulename": "femtoscope.misc.spline", "kind": "module", "doc": "<p>Created on Mon Feb 20 08:50:42 2023</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.spline.guess", "modulename": "femtoscope.misc.spline", "qualname": "guess", "kind": "function", "doc": "<p>Do an ordinary spline fit to provide knots.\nx, y : array_like\n    The data points defining a curve y = f(x).\nw : array_like, optional\n    Strictly positive rank-1 array of weights the same length as x and y.\n    The weights are used in computing the weighted least-squares spline\n    fit. If the errors in the y values have standard-deviation given by the\n    vector d, then w should be 1/d. Default is ones(len(x)).\nk : int, optional\n    The degree of the spline fit. It is recommended to use cubic splines.\n    Even values of k should be avoided especially with small s values.\n    1 &lt;= k &lt;= 5\ns : float, optional\n    A smoothing condition. The amount of smoothness is determined by\n    satisfying the conditions: sum((w * (y - g))<em>*2,axis=0) &lt;= s where g(x)\n    is the smoothed interpolation of (x,y). The user can use s to control\n    the tradeoff between closeness and smoothness of fit. Larger s means\n    more smoothing while smaller values of s indicate less smoothing.\n    Recommended values of s depend on the weights, w. If the weights\n    represent the inverse of the standard-deviation of y, then a good s\n    value should be found in the range (m-sqrt(2</em>m),m+sqrt(2<em>m)) where m is\n    the number of datapoints in x, y, and w. default : s=m-sqrt(2</em>m) if\n    weights are supplied. s = 0.0 (interpolating) if no weights are\n    supplied.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">k</span>, </span><span class=\"param\"><span class=\"n\">s</span>, </span><span class=\"param\"><span class=\"n\">w</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.spline.err", "modulename": "femtoscope.misc.spline", "qualname": "err", "kind": "function", "doc": "<p>The error function to minimize</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">c</span>, </span><span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">t</span>, </span><span class=\"param\"><span class=\"n\">k</span>, </span><span class=\"param\"><span class=\"n\">w</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.spline.spline_neumann", "modulename": "femtoscope.misc.spline", "qualname": "spline_neumann", "kind": "function", "doc": "<p>Spline fitting of 1D data with null derivative at the interval boundaries.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>x, y</strong> (array_like):\nThe data points defining a curve y = f(x).</li>\n<li><strong>xbc</strong> (list of length 2):\nThe bounds of the interval where the constraint is applied. The\nconstraint on one of the two bounds can be relaxed using None e.g. with\nsyntax [x0, None]. The default is [min(x), max(x)].</li>\n<li><strong>k, s, w</strong> (See docstring of <code>guess</code> function.):</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>TYPE</strong>: DESCRIPTION.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">y</span>, </span><span class=\"param\"><span class=\"n\">xbc</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">3</span>, </span><span class=\"param\"><span class=\"n\">s</span><span class=\"o\">=</span><span class=\"mi\">0</span>, </span><span class=\"param\"><span class=\"n\">w</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion", "modulename": "femtoscope.misc.unit_conversion", "kind": "module", "doc": "<p>Created on Wed Jun 15 08:29:43 2022</p>\n\n<p>Convertion between SI units and natural units (in which $c = \\hbar = 1$).</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.unit_conversion.mass_to_nat", "modulename": "femtoscope.misc.unit_conversion", "qualname": "mass_to_nat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">mass</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.nat_to_mass", "modulename": "femtoscope.misc.unit_conversion", "qualname": "nat_to_mass", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.length_to_nat", "modulename": "femtoscope.misc.unit_conversion", "qualname": "length_to_nat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">L</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.nat_to_length", "modulename": "femtoscope.misc.unit_conversion", "qualname": "nat_to_length", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.force_to_nat", "modulename": "femtoscope.misc.unit_conversion", "qualname": "force_to_nat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">force</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.nat_to_force", "modulename": "femtoscope.misc.unit_conversion", "qualname": "nat_to_force", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.acc_to_nat", "modulename": "femtoscope.misc.unit_conversion", "qualname": "acc_to_nat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">acc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.nat_to_acc", "modulename": "femtoscope.misc.unit_conversion", "qualname": "nat_to_acc", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.density_to_nat", "modulename": "femtoscope.misc.unit_conversion", "qualname": "density_to_nat", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">rho</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.nat_to_density", "modulename": "femtoscope.misc.unit_conversion", "qualname": "nat_to_density", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">nat</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.compute_alpha", "modulename": "femtoscope.misc.unit_conversion", "qualname": "compute_alpha", "kind": "function", "doc": "<p>Lambda : [eV]\nbeta   : []\nnpot   : []\nL_0    : [m]\nrho_0  : [kg/m^3]\nalpha  : []</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Lambda</span>, </span><span class=\"param\"><span class=\"n\">beta</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">L_0</span>, </span><span class=\"param\"><span class=\"n\">rho_0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.compute_beta", "modulename": "femtoscope.misc.unit_conversion", "qualname": "compute_beta", "kind": "function", "doc": "<p>Lambda : [eV]\nalpha  : []\nnpot   : []\nL_0    : [m]\nrho_0  : [kg/m^3]\nbeta   : []</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Lambda</span>, </span><span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">L_0</span>, </span><span class=\"param\"><span class=\"n\">rho_0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.compute_Lambda", "modulename": "femtoscope.misc.unit_conversion", "qualname": "compute_Lambda", "kind": "function", "doc": "<p>beta   : []\nalpha  : []\nnpot   : []\nL_0    : [m]\nrho_0  : [kg/m^3]\nLambda : [eV]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">beta</span>, </span><span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">L_0</span>, </span><span class=\"param\"><span class=\"n\">rho_0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.unit_conversion.compute_phi_0", "modulename": "femtoscope.misc.unit_conversion", "qualname": "compute_phi_0", "kind": "function", "doc": "<p>beta   : []\nnpot   : []\nrho_0  : [kg/m^3]\nLambda : [eV]</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">Lambda</span>, </span><span class=\"param\"><span class=\"n\">beta</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">rho_0</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util", "modulename": "femtoscope.misc.util", "kind": "module", "doc": "<p>Created on Sat Jan 29 19:33:57 2022</p>\n\n<p>Collection of heteroclite utility functions.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.misc.util.concatenate", "modulename": "femtoscope.misc.util", "qualname": "concatenate", "kind": "function", "doc": "<p>Concatenate several lists into one and return it</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">list_of_lists</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.get_function_kwargs", "modulename": "femtoscope.misc.util", "qualname": "get_function_kwargs", "kind": "function", "doc": "<p>Return a list of the keyword arguments in a function signature</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">function</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.get_default_args", "modulename": "femtoscope.misc.util", "qualname": "get_default_args", "kind": "function", "doc": "<p>Return a list of the default arguments in a function signature</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">function</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.none_dic_from_names", "modulename": "femtoscope.misc.util", "qualname": "none_dic_from_names", "kind": "function", "doc": "<p>Initialize a dictionary with <code>names</code> as keys and None as values.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">names</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.is_sorted", "modulename": "femtoscope.misc.util", "qualname": "is_sorted", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">a</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.listit", "modulename": "femtoscope.misc.util", "qualname": "listit", "kind": "function", "doc": "<p>Convert nested tuples/lists into nested lists only.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>t</strong> (Nested tuples/lists):\nThe object to convert (not in place).</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Nested lists</strong>: The initial object, but with lists instead of tuples.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.moving_average", "modulename": "femtoscope.misc.util", "qualname": "moving_average", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">x</span>, </span><span class=\"param\"><span class=\"n\">w</span>, </span><span class=\"param\"><span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">&#39;same&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.numpyit", "modulename": "femtoscope.misc.util", "qualname": "numpyit", "kind": "function", "doc": "<p>Convert nested tuples/lists into numpy array.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">t</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.copy_list_of_arrays", "modulename": "femtoscope.misc.util", "qualname": "copy_list_of_arrays", "kind": "function", "doc": "<p>Copy a list of arrays and return the copy-list.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">list_of_arrays</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.remove_empty_lines", "modulename": "femtoscope.misc.util", "qualname": "remove_empty_lines", "kind": "function", "doc": "<p>Remove empty lines from a string.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">string_with_empty_lines</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.date_string", "modulename": "femtoscope.misc.util", "qualname": "date_string", "kind": "function", "doc": "<p>Return the current date-time up to the second</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.latex_float", "modulename": "femtoscope.misc.util", "qualname": "latex_float", "kind": "function", "doc": "<p>Return scientific notation of a float <code>f</code> with <code>nd</code> decimals.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">f</span>, </span><span class=\"param\"><span class=\"n\">nd</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.SymHandler", "modulename": "femtoscope.misc.util", "qualname": "SymHandler", "kind": "class", "doc": "<p>Handler for <code>.Line2D</code> instances.</p>\n\n<h6 id=\"see-also\">See Also</h6>\n\n<p><code>HandlerLine2DCompound</code>:  An earlier handler implementation, which used one\nartist for the line and another for the marker(s).  </p>\n", "bases": "matplotlib.legend_handler.HandlerLine2D"}, {"fullname": "femtoscope.misc.util.SymHandler.create_artists", "modulename": "femtoscope.misc.util", "qualname": "SymHandler.create_artists", "kind": "function", "doc": "<p>Return the legend artists generated.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>legend</strong> (<code>~matplotlib.legend.Legend</code>):\nThe legend for which these legend artists are being created.</li>\n<li><strong>orig_handle</strong> (<code>~matplotlib.artist.Artist</code> or similar):\nThe object for which these legend artists are being created.</li>\n<li><strong>xdescent, ydescent, width, height</strong> (int):\nThe rectangle (<em>xdescent</em>, <em>ydescent</em>, <em>width</em>, <em>height</em>) that the\nlegend artists being created should fit within.</li>\n<li><strong>fontsize</strong> (int):\nThe fontsize in pixels. The legend artists being created should\nbe scaled according to the given fontsize.</li>\n<li><strong>trans</strong> (<code>~matplotlib.transforms.Transform</code>):\nThe transform that is applied to the legend artists being created.\nTypically from unit coordinates in the handler box to screen\ncoordinates.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">legend</span>,</span><span class=\"param\">\t<span class=\"n\">orig_handle</span>,</span><span class=\"param\">\t<span class=\"n\">xdescent</span>,</span><span class=\"param\">\t<span class=\"n\">ydescent</span>,</span><span class=\"param\">\t<span class=\"n\">width</span>,</span><span class=\"param\">\t<span class=\"n\">height</span>,</span><span class=\"param\">\t<span class=\"n\">fontsize</span>,</span><span class=\"param\">\t<span class=\"n\">trans</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.write_geo_params", "modulename": "femtoscope.misc.util", "qualname": "write_geo_params", "kind": "function", "doc": "<p>Modify a .geo file according to the key/value pairs specified by the user\nin the <code>param_dic</code> dictionary.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>geofile</strong> (str):\nName of the .geo file.</li>\n<li><strong>param_dic</strong> (dict):\nDictionary containing key/value pairs to be modified.</li>\n<li><strong>geo_dir</strong> (str, optional):\nDirectory where the .geo file is located. The default is None, in which\ncase the file will be sought in the MESH_DIR/geo directory.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>fullFileName</strong> (str):\nAbsolute pathname of the .geo file.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">geofile</span>, </span><span class=\"param\"><span class=\"n\">param_dic</span>, </span><span class=\"param\"><span class=\"n\">geo_dir</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.merge_dicts", "modulename": "femtoscope.misc.util", "qualname": "merge_dicts", "kind": "function", "doc": "<p>In-place merging of dict2 into dict1. If the key already exists, keep\nthe corresponding val from dict1.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dict1</span>, </span><span class=\"param\"><span class=\"n\">dict2</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.misc.util.mkdir_p", "modulename": "femtoscope.misc.util", "qualname": "mkdir_p", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">path</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics", "modulename": "femtoscope.physics", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon", "modulename": "femtoscope.physics.chameleon", "kind": "module", "doc": "<p>Created on Mon Feb 14 18:02:02 2022</p>\n\n<p>Set up a Chameleon problem on bounded or unbouded domains.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded", "kind": "class", "doc": "<p>Class for solving the Klein-Gordon equation\n$$ \\alpha \\Delta \\phi = \\rho - \\phi^{-(n+1)} $$\non bounded domains, where the field's value is supposedly known at the\nboundary.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the Klein-Gordon\nequation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>solver</strong> (<code>Solver</code> instance):\nThe FEM solver instance to be run.</li>\n</ul>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded.__init__", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded.__init__", "kind": "function", "doc": "<p>Construct a <code>ChameleonBounded</code> problem instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the\nKlein-Gordon equation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>densities</strong> (list):\nList of density functions or constants. The length of this list\nmust match the number of subdomains in the mesh.</li>\n<li><strong>dirichlet_bc</strong> (list):\nList of Dirichlet boundary condition(s).</li>\n<li><strong>rho_bounds</strong> (list):\nList of length 2 containing the min &amp; max values of the density in\nthe whole simulation space.</li>\n<li><strong>meshfile</strong> (str):\nmesh file name.</li>\n<li><strong>coorsys</strong> (str, optional):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None and\nin which case the mesh file is sought in the <code>MESH_DIR</code> directory.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>func_init</strong> (func):\nFunction for initializing the chameleon field profile.\nThe default is None.</li>\n<li><strong>analytic_params</strong> (dict):\nDictionary containing the relevant arguements of function\n<code>chameleon_radial</code>. The default is None.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">alpha</span>,</span><span class=\"param\">\t<span class=\"n\">npot</span>,</span><span class=\"param\">\t<span class=\"n\">densities</span>,</span><span class=\"param\">\t<span class=\"n\">dirichlet_bc</span>,</span><span class=\"param\">\t<span class=\"n\">rho_bounds</span>,</span><span class=\"param\">\t<span class=\"n\">meshfile</span>,</span><span class=\"param\">\t<span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"s1\">&#39;cartesian&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded.alpha", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded.npot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded.npot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded.solver", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded.solver", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded.solve", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded.save", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonBounded.plot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonBounded.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit", "kind": "class", "doc": "<p>Class for solving the Klein-Gordon equation\n$$ \\alpha \\Delta \\phi = \\rho - \\phi^{-(n+1)} $$\non unbounded domains via domain splitting + kelvin inversion.</p>\n\n<p>The field's behaviour is only known infinitely far away from the sources\n(where the approaches the value that minimizes the effective potential in\nvacuum while its gradient vanishes).</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>Rcut</strong> (float):\nRadius of the interior domain (disk in 2d / sphere in 3d).</li>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the Klein-Gordon\nequation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>solver</strong> (Solver instance):\nThe FEM solver instance to be run.</li>\n</ul>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.__init__", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.__init__", "kind": "function", "doc": "<p>Construct an ChameleonSplit problem instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the\nKlein-Gordon equation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>densities_int</strong> (list):\nList of density functions or constants for the interior domain.\nThe length of this list must match the number of sub*domains in the\nmesh.</li>\n<li><strong>densities_ext</strong> (list):\nList of density functions or constants for the exterior domain.\nThelength of this list must match the number of sub*domains in the\nmesh.</li>\n<li><strong>rho_bounds</strong> (list):\nList of length 2 containing the min &amp; max values of the density in\nthe whole simulation space.</li>\n<li><strong>meshfiles</strong> (list):\nList of files' name.</li>\n<li><strong>coorsys</strong> (str, optional):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None and\nin which case the mesh file is sought in the <code>MESH_DIR</code> directory.</li>\n<li><strong>conn</strong> (str):\nMethod for linking the interior domain with the exterior domain.\nThe default is 'connected'.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>func_init</strong> (func):\nFunction for initializing the chameleon field profile.\nThe default is None.</li>\n<li><strong>analytic_params</strong> (dict):\nDictionary containing the relevant arguements of function\n<code>chameleon_radial</code>. The default is None.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">alpha</span>,</span><span class=\"param\">\t<span class=\"n\">npot</span>,</span><span class=\"param\">\t<span class=\"n\">densities_int</span>,</span><span class=\"param\">\t<span class=\"n\">densities_ext</span>,</span><span class=\"param\">\t<span class=\"n\">rho_bounds</span>,</span><span class=\"param\">\t<span class=\"n\">meshfiles</span>,</span><span class=\"param\">\t<span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"s1\">&#39;cartesian&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.Rcut", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.alpha", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.npot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.npot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.solver", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.solver", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.solve", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.save", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonSplit.plot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonSplit.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff.__init__", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">phi0s</span>, </span><span class=\"param\"><span class=\"n\">densities_int</span>, </span><span class=\"param\"><span class=\"n\">meshfiles</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff.Rcut", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff.alpha", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff.solver", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff.solver", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff.solve", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff.save", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiff.plot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiff.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded.__init__", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">npot</span>, </span><span class=\"param\"><span class=\"n\">phi0</span>, </span><span class=\"param\"><span class=\"n\">densities_int</span>, </span><span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded.Rcut", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded.alpha", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded.solver", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded.solver", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded.solve", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded.save", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonDiffBounded.plot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonDiffBounded.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard.__init__", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">alpha</span>,</span><span class=\"param\">\t<span class=\"n\">npot</span>,</span><span class=\"param\">\t<span class=\"n\">densities</span>,</span><span class=\"param\">\t<span class=\"n\">dirichlet_bc</span>,</span><span class=\"param\">\t<span class=\"n\">rho_bounds</span>,</span><span class=\"param\">\t<span class=\"n\">meshfile</span>,</span><span class=\"param\">\t<span class=\"n\">func_phi0</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard.alpha", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard.npot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard.npot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard.solver", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard.solver", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard.solve", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard.save", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon.ChameleonPicard.plot", "modulename": "femtoscope.physics.chameleon", "qualname": "ChameleonPicard.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon_backgrounds", "modulename": "femtoscope.physics.chameleon_backgrounds", "kind": "module", "doc": "<p>Created on Fri Jan 27 10:54:57 2023</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL", "kind": "class", "doc": "<p>Class for solving the Klein-Gordon equation\n$$ \\alpha \\Delta \\phi = \\rho - \\phi^{-(n+1)} $$\non unbounded domains via domain splitting + kelvin inversion.</p>\n\n<p>The field's behaviour is only known infinitely far away from the sources\n(where the approaches the value that minimizes the effective potential in\nvacuum while its gradient vanishes).</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>Rcut</strong> (float):\nRadius of the interior domain (disk in 2d / sphere in 3d).</li>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the Klein-Gordon\nequation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>solver</strong> (Solver instance):\nThe FEM solver instance to be run.</li>\n</ul>\n"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL.__init__", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL.__init__", "kind": "function", "doc": "<p>Construct an ChameleonSplit problem instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the\nKlein-Gordon equation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>densities_int</strong> (list):\nList of density functions or constants for the interior domain.\nThe length of this list must match the number of sub*domains in the\nmesh.</li>\n<li><strong>densities_ext</strong> (list):\nList of density functions or constants for the exterior domain.\nThelength of this list must match the number of sub*domains in the\nmesh.</li>\n<li><strong>rho_bounds</strong> (list):\nList of length 2 containing the min &amp; max values of the density in\nthe whole simulation space.</li>\n<li><strong>meshfiles</strong> (list):\nList of files' name.</li>\n<li><strong>coorsys</strong> (str, optional):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None and\nin which case the mesh file is sought in the <code>MESH_DIR</code> directory.</li>\n<li><strong>conn</strong> (str):\nMethod for linking the interior domain with the exterior domain.\nThe default is 'connected'.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>func_init</strong> (func):\nFunction for initializing the chameleon field profile.\nThe default is None.</li>\n<li><strong>analytic_params</strong> (dict):\nDictionary containing the relevant arguements of function\n<code>chameleon_radial</code>. The default is None.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">alpha</span>,</span><span class=\"param\">\t<span class=\"n\">npot</span>,</span><span class=\"param\">\t<span class=\"n\">meshfiles</span>,</span><span class=\"param\">\t<span class=\"n\">phi0_int</span>,</span><span class=\"param\">\t<span class=\"n\">phi0_ext</span>,</span><span class=\"param\">\t<span class=\"n\">dphi0_int</span>,</span><span class=\"param\">\t<span class=\"n\">dphi0_ext</span>,</span><span class=\"param\">\t<span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"s1\">&#39;polar&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL.Rcut", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL.alpha", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL.npot", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL.npot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL.solver", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL.solver", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL.solve", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon_backgrounds.Chameleon_1DL_2DNL.plot", "modulename": "femtoscope.physics.chameleon_backgrounds", "qualname": "Chameleon_1DL_2DNL.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon_linear", "modulename": "femtoscope.physics.chameleon_linear", "kind": "module", "doc": "<p>Created on Mon Feb 14 18:02:02 2022</p>\n\n<p>Set up a Chameleon problem on bounded or unbouded domains.</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear", "kind": "class", "doc": "<p>Class for solving the Klein-Gordon equation\n$$ \\alpha \\Delta \\phi = \\rho - \\phi^{-(n+1)} $$\non unbounded domains via domain splitting + kelvin inversion.</p>\n\n<p>The field's behaviour is only known infinitely far away from the sources\n(where the approaches the value that minimizes the effective potential in\nvacuum while its gradient vanishes).</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>Rcut</strong> (float):\nRadius of the interior domain (disk in 2d / sphere in 3d).</li>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the Klein-Gordon\nequation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>solver</strong> (Solver instance):\nThe FEM solver instance to be run.</li>\n</ul>\n"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear.__init__", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear.__init__", "kind": "function", "doc": "<p>Construct an ChameleonSplit problem instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the laplacian operator of the\nKlein-Gordon equation (dimensionless).</li>\n<li><strong>npot</strong> (int):\nExponent (parameter of the chameleon model).</li>\n<li><strong>meshfiles</strong> (list):\nList of files' name.</li>\n<li><strong>phi0_int</strong> (func):\nFunction for evaluating background solution at qps of the interior\ndomain.</li>\n<li><strong>dphi0_int</strong> (func):\nFunction for evaluating background solution partial derivative with\nrespect to theta at qps of the interior domain.</li>\n<li><strong>phi0_ext</strong> (func):\nFunction for evaluating background solution at qps of the exterior\ndomain.</li>\n<li><strong>dphi0_ext</strong> (func):\nFunction for evaluating background solution partial derivative with\nrespect to theta at qps of the exterior domain.</li>\n<li><strong>coorsys</strong> (str, optional):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None and\nin which case the mesh file is sought in the <code>MESH_DIR</code> directory.</li>\n<li><strong>conn</strong> (str):\nMethod for linking the interior domain with the exterior domain.\nThe default is 'connected'.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is False.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">alpha</span>,</span><span class=\"param\">\t<span class=\"n\">npot</span>,</span><span class=\"param\">\t<span class=\"n\">meshfiles</span>,</span><span class=\"param\">\t<span class=\"n\">phi0_int</span>,</span><span class=\"param\">\t<span class=\"n\">dphi0_int</span>,</span><span class=\"param\">\t<span class=\"n\">phi0_ext</span>,</span><span class=\"param\">\t<span class=\"n\">dphi0_ext</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear.Rcut", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear.alpha", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear.npot", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear.npot", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear.solver", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear.solver", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear.solve", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.chameleon_linear.ChameleonLinear.plot", "modulename": "femtoscope.physics.chameleon_linear", "qualname": "ChameleonLinear.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson", "modulename": "femtoscope.physics.poisson", "kind": "module", "doc": "<p>Created on Mon Feb 14 10:18:32 2022</p>\n\n<p>Set up a Poisson problem on bounded or unbounded domains.</p>\n\n<p>Note about Neumann terms:\n    In neumann material, one needs to evaluate of the gradient of a given\n    field at coordinates belonging to the domain's boundary. The best way\n    to do so would be to evaluate a <code>ev_grad</code> term. It is however a painful\n    task as <code>ev_grad</code> returns gradients at quadrature points disorderly with\n    respect to the <code>coors</code> variable...\n    Using <code>field.evaluate_at()</code> provides very close gradient values and is\n    much less cumbersome!</p>\n\n<p>@author: hlevy</p>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonBounded", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonBounded", "kind": "class", "doc": "<p>Class for solving the Poisson equation\n$$ \\Delta \\Phi = \\alpha \\times \\rho $$\non bounded domains.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the lhs of Poisson's equation\n(dimensionless).</li>\n<li><strong>solver</strong> (Solver instance):\nThe FEM solver instance to be run.</li>\n</ul>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonBounded.__init__", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonBounded.__init__", "kind": "function", "doc": "<p>Construct a Poisson problem instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the rhs of Poisson's equation\n(dimensionless).</li>\n<li><strong>densities</strong> (list):\nList of density functions or constants. The length of this list\nmust match the number of sub*domains in the mesh.</li>\n<li><strong>dirichlet_bc</strong> (list):\nList of Dirichlet boundary condition(s).</li>\n<li><strong>meshfile</strong> (str):\nmesh file name.</li>\n<li><strong>coorsys</strong> (str, optional):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None and\nin which case the mesh file is sought in the <code>MESH_DIR</code> directory.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is True.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">alpha</span>,</span><span class=\"param\">\t<span class=\"n\">densities</span>,</span><span class=\"param\">\t<span class=\"n\">dirichlet_bc</span>,</span><span class=\"param\">\t<span class=\"n\">meshfile</span>,</span><span class=\"param\">\t<span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"s1\">&#39;cartesian&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.poisson.PoissonBounded.alpha", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonBounded.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonBounded.solve", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonBounded.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonBounded.save", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonBounded.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonBounded.plot", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonBounded.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonSplit", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonSplit", "kind": "class", "doc": "<p>Class for solving the Poisson equation\n$$ \\Delta \\Phi = \\alpha \\times \\rho $$\non unbounded domains via domain splitting + kelvin inversion.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the lhs of Poisson's equation\n(dimensionless).</li>\n<li><strong>Rcut</strong> (float):\nRadius of the interior domain (disk in 2d / sphere in 3d).</li>\n<li><strong>solver</strong> (Solver instance):\nThe FEM solver instance to be run.</li>\n</ul>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonSplit.__init__", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonSplit.__init__", "kind": "function", "doc": "<p>Construct a Poisson problem instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the rhs of Poisson's equation\n(dimensionless).</li>\n<li><strong>densities_int</strong> (list):\nList of density functions or constants for the interior domain.\nThelength of this list must match the number of sub*domains in the\nmesh.</li>\n<li><strong>densities_ext</strong> (list):\nList of density functions or constants for the exterior domain.\nThelength of this list must match the number of sub*domains in the\nmesh.</li>\n<li><strong>meshfiles</strong> (list):\nList of files' name.</li>\n<li><strong>coorsys</strong> (str, optional):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None and\nin which case the mesh file is sought in the <code>MESH_DIR</code> directory.</li>\n<li><strong>conn</strong> (str):\nMethod for linking the interior domain with the exterior domain.\nThe default is 'connected'.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>relax_pp</strong> (float):\nRelaxation parameter for ping-pong iterations (between 0 and 1).\nThe default is 0.7.</li>\n<li><strong>entity_functions_int</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection in the\ninterior domain. The default is [].</li>\n<li><strong>entity_functions_ext</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection in the\nexterior domain. The default is [].</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is True.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">alpha</span>,</span><span class=\"param\">\t<span class=\"n\">densities_int</span>,</span><span class=\"param\">\t<span class=\"n\">densities_ext</span>,</span><span class=\"param\">\t<span class=\"n\">meshfiles</span>,</span><span class=\"param\">\t<span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"s1\">&#39;cartesian&#39;</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.poisson.PoissonSplit.Rcut", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonSplit.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonSplit.alpha", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonSplit.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonSplit.solve", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonSplit.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonSplit.save", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonSplit.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonSplit.plot", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonSplit.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonCompact", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonCompact", "kind": "class", "doc": "<p>Class for solving the Poisson equation\n$$ \\Delta \\Phi = \\alpha \\times \\rho $$\non the whole space via the compactification technique.</p>\n\n<h6 id=\"attributes\">Attributes</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the lhs of Poisson's equation\n(dimensionless).</li>\n<li><strong>solver</strong> (Solver instance):\nThe FEM solver instance to be run.</li>\n</ul>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonCompact.__init__", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonCompact.__init__", "kind": "function", "doc": "<p>Construct a Poisson problem instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>alpha</strong> (float):\nPhysical parameter weighting the rhs of Poisson's equation\n(dimensionless).</li>\n<li><strong>densities</strong> (list):\nList of density functions or constants. The length of this list\nmust match the number of sub*domains in the mesh.</li>\n<li><strong>meshfile</strong> (str):\nmesh file name.</li>\n<li><strong>coorsys</strong> (str, optional):\nThe set of coordinates to be used. The default is 'cartesian'.</li>\n</ul>\n\n<h6 id=\"other-parameters\">Other Parameters</h6>\n\n<ul>\n<li><strong>mesh_dir</strong> (str):\nDirectory where the mesh files are located. The default is None and\nin which case the mesh file is sought in the <code>MESH_DIR</code> directory.</li>\n<li><strong>fem_order</strong> (int):\nThe FE approximation order. The default is 2.</li>\n<li><strong>entity_functions</strong> (list of 2-tuple):\nList of tuples (dim, function) for manual entity selection.\nThe default is [].</li>\n<li><strong>verbose</strong> (bool):\nDisplay user's information. The default is True.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">alpha</span>, </span><span class=\"param\"><span class=\"n\">densities</span>, </span><span class=\"param\"><span class=\"n\">meshfile</span>, </span><span class=\"param\"><span class=\"n\">coorsys</span><span class=\"o\">=</span><span class=\"s1\">&#39;polar&#39;</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "femtoscope.physics.poisson.PoissonCompact.Rcut", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonCompact.Rcut", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonCompact.alpha", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonCompact.alpha", "kind": "variable", "doc": "<p></p>\n"}, {"fullname": "femtoscope.physics.poisson.PoissonCompact.solve", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonCompact.solve", "kind": "function", "doc": "<p>Wrapper for Solver.solve method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonCompact.save", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonCompact.save", "kind": "function", "doc": "<p>Wrapper for Solver.save method</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">grad</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "femtoscope.physics.poisson.PoissonCompact.plot", "modulename": "femtoscope.physics.poisson", "qualname": "PoissonCompact.plot", "kind": "function", "doc": "<p>Wrapper for pyvista_plot</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();